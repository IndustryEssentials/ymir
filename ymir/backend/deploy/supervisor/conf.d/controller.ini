[program:controller_server]
command=python pymir-controller/controller/server.py -d -f pymir-controller/controller/server_prd_config.yaml
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/app_logs/pymir_controller.log       ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=/app_logs/pymir_controller.log       ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
stopasgroup=true
startsecs=50


[program:label_project_monitor]
command=python -u pymir-controller/controller/label_project_monitor.py
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/app_logs//pymir_label_monitor.log        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=/app_logs//pymir_label_monitor.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
stopasgroup=true
startsecs=50


[program:viz_service]
command=/bin/bash -c "cd pymir-viz&&gunicorn -k gevent -c gunicorn_conf.py wsgi:connexion_app"
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/app_logs/pymir_viz.log        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=/app_logs/pymir_viz.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
stopasgroup=true
startsecs=50


[program:app]
command=/bin/bash -c "cd pymir-app&&sh prestart.sh&&sh start.sh"
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/app_logs/pymir_app.log        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=/app_logs/pymir_app.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
stopasgroup=true
startsecs=50


[program:arq]
command=/bin/bash -c "cd pymir-app/app/utils&&arq scheduler.WorkerSettings"
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/app_logs/pymir_arq.log        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=/app_logs/pymir_arq.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
stopasgroup=true
startsecs=50


[program:ed_app]
command=/bin/bash -c "cd pymir-ed && uvicorn app_server:app --port 8090 --host 0.0.0.0"
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/app_logs/pymir_edapp.log        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=/app_logs/pymir_edapp.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
stopasgroup=true
startsecs=50


[program:ed]
command=/bin/bash -c "cd pymir-ed && python ed_server.py"
; command=/bin/bash -c "cd pymir-ed && python ed_tests/sio_server.py"
numprocs=1
autostart=true
autorestart=true
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/app_logs/pymir_ed.log        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=/app_logs/pymir_ed.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=50MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false           ; send stderr to syslog with process name (default false)
stopasgroup=true
startsecs=50
