// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mir_command.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

/// assertion type: training, validation or test
type TvtType int32

const (
	TvtType_TvtTypeUnknown    TvtType = 0
	TvtType_TvtTypeTraining   TvtType = 1
	TvtType_TvtTypeValidation TvtType = 2
	TvtType_TvtTypeTest       TvtType = 3
)

var TvtType_name = map[int32]string{
	0: "TvtTypeUnknown",
	1: "TvtTypeTraining",
	2: "TvtTypeValidation",
	3: "TvtTypeTest",
}

var TvtType_value = map[string]int32{
	"TvtTypeUnknown":    0,
	"TvtTypeTraining":   1,
	"TvtTypeValidation": 2,
	"TvtTypeTest":       3,
}

func (x TvtType) String() string {
	return proto.EnumName(TvtType_name, int32(x))
}

func (TvtType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{0}
}

type AssetType int32

const (
	AssetType_AssetTypeUnknown       AssetType = 0
	AssetType_AssetTypeImageJpeg     AssetType = 1
	AssetType_AssetTypeImagePng      AssetType = 2
	AssetType_AssetTypeImagePixelMat AssetType = 3
	AssetType_AssetTypeImageYuv420p  AssetType = 4
	AssetType_AssetTypeImageYuv420sp AssetType = 5
	AssetType_AssetTypeImageYuv422p  AssetType = 6
	AssetType_AssetTypeImageYuv422sp AssetType = 7
	AssetType_AssetTypeImageBmp      AssetType = 8
	AssetType_AssetTypeVideoMp4      AssetType = 101
)

var AssetType_name = map[int32]string{
	0:   "AssetTypeUnknown",
	1:   "AssetTypeImageJpeg",
	2:   "AssetTypeImagePng",
	3:   "AssetTypeImagePixelMat",
	4:   "AssetTypeImageYuv420p",
	5:   "AssetTypeImageYuv420sp",
	6:   "AssetTypeImageYuv422p",
	7:   "AssetTypeImageYuv422sp",
	8:   "AssetTypeImageBmp",
	101: "AssetTypeVideoMp4",
}

var AssetType_value = map[string]int32{
	"AssetTypeUnknown":       0,
	"AssetTypeImageJpeg":     1,
	"AssetTypeImagePng":      2,
	"AssetTypeImagePixelMat": 3,
	"AssetTypeImageYuv420p":  4,
	"AssetTypeImageYuv420sp": 5,
	"AssetTypeImageYuv422p":  6,
	"AssetTypeImageYuv422sp": 7,
	"AssetTypeImageBmp":      8,
	"AssetTypeVideoMp4":      101,
}

func (x AssetType) String() string {
	return proto.EnumName(AssetType_name, int32(x))
}

func (AssetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{1}
}

/// task type
type TaskType int32

const (
	TaskType_TaskTypeUnknown    TaskType = 0
	TaskType_TaskTypeTraining   TaskType = 1
	TaskType_TaskTypeMining     TaskType = 2
	TaskType_TaskTypeLabel      TaskType = 3
	TaskType_TaskTypeFilter     TaskType = 4
	TaskType_TaskTypeImportData TaskType = 5
	TaskType_TaskTypeExportData TaskType = 6
	TaskType_TaskTypeCopyData   TaskType = 7
	TaskType_TaskTypeMerge      TaskType = 8
	TaskType_TaskTypeInfer      TaskType = 9
	TaskType_TaskTypeSampling   TaskType = 10
	/// used by ymir_controller
	TaskType_TaskTypeFusion      TaskType = 11
	TaskType_TaskTypeInit        TaskType = 12
	TaskType_TaskTypeImportModel TaskType = 13
	TaskType_TaskTypeEvaluate    TaskType = 16
)

var TaskType_name = map[int32]string{
	0:  "TaskTypeUnknown",
	1:  "TaskTypeTraining",
	2:  "TaskTypeMining",
	3:  "TaskTypeLabel",
	4:  "TaskTypeFilter",
	5:  "TaskTypeImportData",
	6:  "TaskTypeExportData",
	7:  "TaskTypeCopyData",
	8:  "TaskTypeMerge",
	9:  "TaskTypeInfer",
	10: "TaskTypeSampling",
	11: "TaskTypeFusion",
	12: "TaskTypeInit",
	13: "TaskTypeImportModel",
	16: "TaskTypeEvaluate",
}

var TaskType_value = map[string]int32{
	"TaskTypeUnknown":     0,
	"TaskTypeTraining":    1,
	"TaskTypeMining":      2,
	"TaskTypeLabel":       3,
	"TaskTypeFilter":      4,
	"TaskTypeImportData":  5,
	"TaskTypeExportData":  6,
	"TaskTypeCopyData":    7,
	"TaskTypeMerge":       8,
	"TaskTypeInfer":       9,
	"TaskTypeSampling":    10,
	"TaskTypeFusion":      11,
	"TaskTypeInit":        12,
	"TaskTypeImportModel": 13,
	"TaskTypeEvaluate":    16,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}

func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{2}
}

type TaskState int32

const (
	TaskState_TaskStateUnknown TaskState = 0
	TaskState_TaskStatePending TaskState = 1
	TaskState_TaskStateRunning TaskState = 2
	TaskState_TaskStateDone    TaskState = 3
	TaskState_TaskStateError   TaskState = 4
	TaskState_TaskStateMiss    TaskState = 5
)

var TaskState_name = map[int32]string{
	0: "TaskStateUnknown",
	1: "TaskStatePending",
	2: "TaskStateRunning",
	3: "TaskStateDone",
	4: "TaskStateError",
	5: "TaskStateMiss",
}

var TaskState_value = map[string]int32{
	"TaskStateUnknown": 0,
	"TaskStatePending": 1,
	"TaskStateRunning": 2,
	"TaskStateDone":    3,
	"TaskStateError":   4,
	"TaskStateMiss":    5,
}

func (x TaskState) String() string {
	return proto.EnumName(TaskState_name, int32(x))
}

func (TaskState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{3}
}

type Sha1Type int32

const (
	Sha1Type_SHA1_TYPE_UNKNOWN Sha1Type = 0
	Sha1Type_SHA1_TYPE_ASSET   Sha1Type = 1
	Sha1Type_SHA1_TYPE_COMMIT  Sha1Type = 2
)

var Sha1Type_name = map[int32]string{
	0: "SHA1_TYPE_UNKNOWN",
	1: "SHA1_TYPE_ASSET",
	2: "SHA1_TYPE_COMMIT",
}

var Sha1Type_value = map[string]int32{
	"SHA1_TYPE_UNKNOWN": 0,
	"SHA1_TYPE_ASSET":   1,
	"SHA1_TYPE_COMMIT":  2,
}

func (x Sha1Type) String() string {
	return proto.EnumName(Sha1Type_name, int32(x))
}

func (Sha1Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{4}
}

type MirStorage int32

const (
	MirStorage_MIR_METADATAS   MirStorage = 0
	MirStorage_MIR_ANNOTATIONS MirStorage = 1
	MirStorage_MIR_KEYWORDS    MirStorage = 2
	MirStorage_MIR_TASKS       MirStorage = 3
	MirStorage_MIR_CONTEXT     MirStorage = 4
)

var MirStorage_name = map[int32]string{
	0: "MIR_METADATAS",
	1: "MIR_ANNOTATIONS",
	2: "MIR_KEYWORDS",
	3: "MIR_TASKS",
	4: "MIR_CONTEXT",
}

var MirStorage_value = map[string]int32{
	"MIR_METADATAS":   0,
	"MIR_ANNOTATIONS": 1,
	"MIR_KEYWORDS":    2,
	"MIR_TASKS":       3,
	"MIR_CONTEXT":     4,
}

func (x MirStorage) String() string {
	return proto.EnumName(MirStorage_name, int32(x))
}

func (MirStorage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{5}
}

type LabelFormat int32

const (
	LabelFormat_NO_ANNOTATION LabelFormat = 0
	LabelFormat_PASCAL_VOC    LabelFormat = 1
	LabelFormat_IF_ARK        LabelFormat = 2
)

var LabelFormat_name = map[int32]string{
	0: "NO_ANNOTATION",
	1: "PASCAL_VOC",
	2: "IF_ARK",
}

var LabelFormat_value = map[string]int32{
	"NO_ANNOTATION": 0,
	"PASCAL_VOC":    1,
	"IF_ARK":        2,
}

func (x LabelFormat) String() string {
	return proto.EnumName(LabelFormat_name, int32(x))
}

func (LabelFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{6}
}

type ConfusionMatrixType int32

const (
	ConfusionMatrixType_NotSet  ConfusionMatrixType = 0
	ConfusionMatrixType_TP      ConfusionMatrixType = 1
	ConfusionMatrixType_FP      ConfusionMatrixType = 2
	ConfusionMatrixType_FN      ConfusionMatrixType = 3
	ConfusionMatrixType_TN      ConfusionMatrixType = 4
	ConfusionMatrixType_Unknown ConfusionMatrixType = 5
	// Matched True Positive, only for gt.
	ConfusionMatrixType_MTP     ConfusionMatrixType = 11
	ConfusionMatrixType_IGNORED ConfusionMatrixType = 12
)

var ConfusionMatrixType_name = map[int32]string{
	0:  "NotSet",
	1:  "TP",
	2:  "FP",
	3:  "FN",
	4:  "TN",
	5:  "Unknown",
	11: "MTP",
	12: "IGNORED",
}

var ConfusionMatrixType_value = map[string]int32{
	"NotSet":  0,
	"TP":      1,
	"FP":      2,
	"FN":      3,
	"TN":      4,
	"Unknown": 5,
	"MTP":     11,
	"IGNORED": 12,
}

func (x ConfusionMatrixType) String() string {
	return proto.EnumName(ConfusionMatrixType_name, int32(x))
}

func (ConfusionMatrixType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{7}
}

/// ========== metadatas.mir ==========
type MirMetadatas struct {
	/// key: asset hash, value: attributes
	Attributes           map[string]*MetadataAttributes `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *MirMetadatas) Reset()         { *m = MirMetadatas{} }
func (m *MirMetadatas) String() string { return proto.CompactTextString(m) }
func (*MirMetadatas) ProtoMessage()    {}
func (*MirMetadatas) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{0}
}

func (m *MirMetadatas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirMetadatas.Unmarshal(m, b)
}
func (m *MirMetadatas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirMetadatas.Marshal(b, m, deterministic)
}
func (m *MirMetadatas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirMetadatas.Merge(m, src)
}
func (m *MirMetadatas) XXX_Size() int {
	return xxx_messageInfo_MirMetadatas.Size(m)
}
func (m *MirMetadatas) XXX_DiscardUnknown() {
	xxx_messageInfo_MirMetadatas.DiscardUnknown(m)
}

var xxx_messageInfo_MirMetadatas proto.InternalMessageInfo

func (m *MirMetadatas) GetAttributes() map[string]*MetadataAttributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type MetadataAttributes struct {
	DatasetName          string     `protobuf:"bytes,1,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	Timestamp            *Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TvtType              TvtType    `protobuf:"varint,3,opt,name=tvt_type,json=tvtType,proto3,enum=mir.command.TvtType" json:"tvt_type,omitempty"`
	AssetType            AssetType  `protobuf:"varint,4,opt,name=asset_type,json=assetType,proto3,enum=mir.command.AssetType" json:"asset_type,omitempty"`
	Width                int32      `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32      `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	ImageChannels        int32      `protobuf:"varint,7,opt,name=image_channels,json=imageChannels,proto3" json:"image_channels,omitempty"`
	ByteSize             int32      `protobuf:"varint,8,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MetadataAttributes) Reset()         { *m = MetadataAttributes{} }
func (m *MetadataAttributes) String() string { return proto.CompactTextString(m) }
func (*MetadataAttributes) ProtoMessage()    {}
func (*MetadataAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{1}
}

func (m *MetadataAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataAttributes.Unmarshal(m, b)
}
func (m *MetadataAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataAttributes.Marshal(b, m, deterministic)
}
func (m *MetadataAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataAttributes.Merge(m, src)
}
func (m *MetadataAttributes) XXX_Size() int {
	return xxx_messageInfo_MetadataAttributes.Size(m)
}
func (m *MetadataAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataAttributes proto.InternalMessageInfo

func (m *MetadataAttributes) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *MetadataAttributes) GetTimestamp() *Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *MetadataAttributes) GetTvtType() TvtType {
	if m != nil {
		return m.TvtType
	}
	return TvtType_TvtTypeUnknown
}

func (m *MetadataAttributes) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_AssetTypeUnknown
}

func (m *MetadataAttributes) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *MetadataAttributes) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MetadataAttributes) GetImageChannels() int32 {
	if m != nil {
		return m.ImageChannels
	}
	return 0
}

func (m *MetadataAttributes) GetByteSize() int32 {
	if m != nil {
		return m.ByteSize
	}
	return 0
}

type Timestamp struct {
	/// start time stamp
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	/// duration (in seconds), for images, it's always 0
	Duration             float32  `protobuf:"fixed32,2,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{2}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Timestamp) GetDuration() float32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

/// ========== annotations.mir ==========
type MirAnnotations struct {
	HeadTaskId  string                 `protobuf:"bytes,2,opt,name=head_task_id,json=headTaskId,proto3" json:"head_task_id,omitempty"`
	GroundTruth *SingleTaskAnnotations `protobuf:"bytes,3,opt,name=ground_truth,json=groundTruth,proto3" json:"ground_truth,omitempty"`
	Prediction  *SingleTaskAnnotations `protobuf:"bytes,4,opt,name=prediction,proto3" json:"prediction,omitempty"`
	// key: asset id, value: cks and image quality, from pred and gt
	ImageCks             map[string]*SingleImageCks `protobuf:"bytes,5,rep,name=image_cks,json=imageCks,proto3" json:"image_cks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MirAnnotations) Reset()         { *m = MirAnnotations{} }
func (m *MirAnnotations) String() string { return proto.CompactTextString(m) }
func (*MirAnnotations) ProtoMessage()    {}
func (*MirAnnotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{3}
}

func (m *MirAnnotations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirAnnotations.Unmarshal(m, b)
}
func (m *MirAnnotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirAnnotations.Marshal(b, m, deterministic)
}
func (m *MirAnnotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirAnnotations.Merge(m, src)
}
func (m *MirAnnotations) XXX_Size() int {
	return xxx_messageInfo_MirAnnotations.Size(m)
}
func (m *MirAnnotations) XXX_DiscardUnknown() {
	xxx_messageInfo_MirAnnotations.DiscardUnknown(m)
}

var xxx_messageInfo_MirAnnotations proto.InternalMessageInfo

func (m *MirAnnotations) GetHeadTaskId() string {
	if m != nil {
		return m.HeadTaskId
	}
	return ""
}

func (m *MirAnnotations) GetGroundTruth() *SingleTaskAnnotations {
	if m != nil {
		return m.GroundTruth
	}
	return nil
}

func (m *MirAnnotations) GetPrediction() *SingleTaskAnnotations {
	if m != nil {
		return m.Prediction
	}
	return nil
}

func (m *MirAnnotations) GetImageCks() map[string]*SingleImageCks {
	if m != nil {
		return m.ImageCks
	}
	return nil
}

type SingleTaskAnnotations struct {
	/// key: image id, value: annotations of that single image
	ImageAnnotations     map[string]*SingleImageAnnotations `protobuf:"bytes,1,rep,name=image_annotations,json=imageAnnotations,proto3" json:"image_annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskId               string                             `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *SingleTaskAnnotations) Reset()         { *m = SingleTaskAnnotations{} }
func (m *SingleTaskAnnotations) String() string { return proto.CompactTextString(m) }
func (*SingleTaskAnnotations) ProtoMessage()    {}
func (*SingleTaskAnnotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{4}
}

func (m *SingleTaskAnnotations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleTaskAnnotations.Unmarshal(m, b)
}
func (m *SingleTaskAnnotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleTaskAnnotations.Marshal(b, m, deterministic)
}
func (m *SingleTaskAnnotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleTaskAnnotations.Merge(m, src)
}
func (m *SingleTaskAnnotations) XXX_Size() int {
	return xxx_messageInfo_SingleTaskAnnotations.Size(m)
}
func (m *SingleTaskAnnotations) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleTaskAnnotations.DiscardUnknown(m)
}

var xxx_messageInfo_SingleTaskAnnotations proto.InternalMessageInfo

func (m *SingleTaskAnnotations) GetImageAnnotations() map[string]*SingleImageAnnotations {
	if m != nil {
		return m.ImageAnnotations
	}
	return nil
}

func (m *SingleTaskAnnotations) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type SingleImageAnnotations struct {
	Annotations          []*Annotation `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SingleImageAnnotations) Reset()         { *m = SingleImageAnnotations{} }
func (m *SingleImageAnnotations) String() string { return proto.CompactTextString(m) }
func (*SingleImageAnnotations) ProtoMessage()    {}
func (*SingleImageAnnotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{5}
}

func (m *SingleImageAnnotations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleImageAnnotations.Unmarshal(m, b)
}
func (m *SingleImageAnnotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleImageAnnotations.Marshal(b, m, deterministic)
}
func (m *SingleImageAnnotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleImageAnnotations.Merge(m, src)
}
func (m *SingleImageAnnotations) XXX_Size() int {
	return xxx_messageInfo_SingleImageAnnotations.Size(m)
}
func (m *SingleImageAnnotations) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleImageAnnotations.DiscardUnknown(m)
}

var xxx_messageInfo_SingleImageAnnotations proto.InternalMessageInfo

func (m *SingleImageAnnotations) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type SingleImageCks struct {
	Cks                  map[string]string `protobuf:"bytes,1,rep,name=cks,proto3" json:"cks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageQuality         float32           `protobuf:"fixed32,2,opt,name=image_quality,json=imageQuality,proto3" json:"image_quality,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SingleImageCks) Reset()         { *m = SingleImageCks{} }
func (m *SingleImageCks) String() string { return proto.CompactTextString(m) }
func (*SingleImageCks) ProtoMessage()    {}
func (*SingleImageCks) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{6}
}

func (m *SingleImageCks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleImageCks.Unmarshal(m, b)
}
func (m *SingleImageCks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleImageCks.Marshal(b, m, deterministic)
}
func (m *SingleImageCks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleImageCks.Merge(m, src)
}
func (m *SingleImageCks) XXX_Size() int {
	return xxx_messageInfo_SingleImageCks.Size(m)
}
func (m *SingleImageCks) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleImageCks.DiscardUnknown(m)
}

var xxx_messageInfo_SingleImageCks proto.InternalMessageInfo

func (m *SingleImageCks) GetCks() map[string]string {
	if m != nil {
		return m.Cks
	}
	return nil
}

func (m *SingleImageCks) GetImageQuality() float32 {
	if m != nil {
		return m.ImageQuality
	}
	return 0
}

type Annotation struct {
	// Index of this annotation in current single image, may be different from the index in repeated field.
	Index                int32               `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Box                  *Rect               `protobuf:"bytes,2,opt,name=box,proto3" json:"box,omitempty"`
	ClassId              int32               `protobuf:"varint,3,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	Score                float64             `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	AnnoQuality          float32             `protobuf:"fixed32,5,opt,name=anno_quality,json=annoQuality,proto3" json:"anno_quality,omitempty"`
	Tags                 map[string]string   `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cm                   ConfusionMatrixType `protobuf:"varint,7,opt,name=cm,proto3,enum=mir.command.ConfusionMatrixType" json:"cm,omitempty"`
	DetLinkId            int32               `protobuf:"varint,8,opt,name=det_link_id,json=detLinkId,proto3" json:"det_link_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Annotation) Reset()         { *m = Annotation{} }
func (m *Annotation) String() string { return proto.CompactTextString(m) }
func (*Annotation) ProtoMessage()    {}
func (*Annotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{7}
}

func (m *Annotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Annotation.Unmarshal(m, b)
}
func (m *Annotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Annotation.Marshal(b, m, deterministic)
}
func (m *Annotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Annotation.Merge(m, src)
}
func (m *Annotation) XXX_Size() int {
	return xxx_messageInfo_Annotation.Size(m)
}
func (m *Annotation) XXX_DiscardUnknown() {
	xxx_messageInfo_Annotation.DiscardUnknown(m)
}

var xxx_messageInfo_Annotation proto.InternalMessageInfo

func (m *Annotation) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Annotation) GetBox() *Rect {
	if m != nil {
		return m.Box
	}
	return nil
}

func (m *Annotation) GetClassId() int32 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *Annotation) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Annotation) GetAnnoQuality() float32 {
	if m != nil {
		return m.AnnoQuality
	}
	return 0
}

func (m *Annotation) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Annotation) GetCm() ConfusionMatrixType {
	if m != nil {
		return m.Cm
	}
	return ConfusionMatrixType_NotSet
}

func (m *Annotation) GetDetLinkId() int32 {
	if m != nil {
		return m.DetLinkId
	}
	return 0
}

type Rect struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	W                    int32    `protobuf:"varint,3,opt,name=w,proto3" json:"w,omitempty"`
	H                    int32    `protobuf:"varint,4,opt,name=h,proto3" json:"h,omitempty"`
	RotateAngle          float32  `protobuf:"fixed32,5,opt,name=rotate_angle,json=rotateAngle,proto3" json:"rotate_angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rect) Reset()         { *m = Rect{} }
func (m *Rect) String() string { return proto.CompactTextString(m) }
func (*Rect) ProtoMessage()    {}
func (*Rect) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{8}
}

func (m *Rect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rect.Unmarshal(m, b)
}
func (m *Rect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rect.Marshal(b, m, deterministic)
}
func (m *Rect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rect.Merge(m, src)
}
func (m *Rect) XXX_Size() int {
	return xxx_messageInfo_Rect.Size(m)
}
func (m *Rect) XXX_DiscardUnknown() {
	xxx_messageInfo_Rect.DiscardUnknown(m)
}

var xxx_messageInfo_Rect proto.InternalMessageInfo

func (m *Rect) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Rect) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Rect) GetW() int32 {
	if m != nil {
		return m.W
	}
	return 0
}

func (m *Rect) GetH() int32 {
	if m != nil {
		return m.H
	}
	return 0
}

func (m *Rect) GetRotateAngle() float32 {
	if m != nil {
		return m.RotateAngle
	}
	return 0
}

/// ========== keywords.mir ==========
type MirKeywords struct {
	// key: asset hash, value: keywords list
	Keywords map[string]*Keywords `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PredIdx  *KeywordToIndex      `protobuf:"bytes,7,opt,name=pred_idx,json=predIdx,proto3" json:"pred_idx,omitempty"`
	GtIdx    *KeywordToIndex      `protobuf:"bytes,8,opt,name=gt_idx,json=gtIdx,proto3" json:"gt_idx,omitempty"`
	// key: ck main key, value: assets and assets with sub keys, from (mir_annotations.image_cks) pred and gt
	CkIdx                map[string]*AssetAnnoIndex `protobuf:"bytes,9,rep,name=ck_idx,json=ckIdx,proto3" json:"ck_idx,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MirKeywords) Reset()         { *m = MirKeywords{} }
func (m *MirKeywords) String() string { return proto.CompactTextString(m) }
func (*MirKeywords) ProtoMessage()    {}
func (*MirKeywords) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{9}
}

func (m *MirKeywords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirKeywords.Unmarshal(m, b)
}
func (m *MirKeywords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirKeywords.Marshal(b, m, deterministic)
}
func (m *MirKeywords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirKeywords.Merge(m, src)
}
func (m *MirKeywords) XXX_Size() int {
	return xxx_messageInfo_MirKeywords.Size(m)
}
func (m *MirKeywords) XXX_DiscardUnknown() {
	xxx_messageInfo_MirKeywords.DiscardUnknown(m)
}

var xxx_messageInfo_MirKeywords proto.InternalMessageInfo

func (m *MirKeywords) GetKeywords() map[string]*Keywords {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *MirKeywords) GetPredIdx() *KeywordToIndex {
	if m != nil {
		return m.PredIdx
	}
	return nil
}

func (m *MirKeywords) GetGtIdx() *KeywordToIndex {
	if m != nil {
		return m.GtIdx
	}
	return nil
}

func (m *MirKeywords) GetCkIdx() map[string]*AssetAnnoIndex {
	if m != nil {
		return m.CkIdx
	}
	return nil
}

type KeywordToIndex struct {
	// key: ci, value: annos
	Cis map[int32]*MapStringToInt32List `protobuf:"bytes,1,rep,name=cis,proto3" json:"cis,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// key: ck main key, value: annos and annos with sub keys
	Tags                 map[string]*AssetAnnoIndex `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *KeywordToIndex) Reset()         { *m = KeywordToIndex{} }
func (m *KeywordToIndex) String() string { return proto.CompactTextString(m) }
func (*KeywordToIndex) ProtoMessage()    {}
func (*KeywordToIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{10}
}

func (m *KeywordToIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeywordToIndex.Unmarshal(m, b)
}
func (m *KeywordToIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeywordToIndex.Marshal(b, m, deterministic)
}
func (m *KeywordToIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeywordToIndex.Merge(m, src)
}
func (m *KeywordToIndex) XXX_Size() int {
	return xxx_messageInfo_KeywordToIndex.Size(m)
}
func (m *KeywordToIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_KeywordToIndex.DiscardUnknown(m)
}

var xxx_messageInfo_KeywordToIndex proto.InternalMessageInfo

func (m *KeywordToIndex) GetCis() map[int32]*MapStringToInt32List {
	if m != nil {
		return m.Cis
	}
	return nil
}

func (m *KeywordToIndex) GetTags() map[string]*AssetAnnoIndex {
	if m != nil {
		return m.Tags
	}
	return nil
}

type StringList struct {
	AssetIds             []string `protobuf:"bytes,1,rep,name=asset_ids,json=assetIds,proto3" json:"asset_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringList) Reset()         { *m = StringList{} }
func (m *StringList) String() string { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()    {}
func (*StringList) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{11}
}

func (m *StringList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringList.Unmarshal(m, b)
}
func (m *StringList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringList.Marshal(b, m, deterministic)
}
func (m *StringList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringList.Merge(m, src)
}
func (m *StringList) XXX_Size() int {
	return xxx_messageInfo_StringList.Size(m)
}
func (m *StringList) XXX_DiscardUnknown() {
	xxx_messageInfo_StringList.DiscardUnknown(m)
}

var xxx_messageInfo_StringList proto.InternalMessageInfo

func (m *StringList) GetAssetIds() []string {
	if m != nil {
		return m.AssetIds
	}
	return nil
}

type MapStringToInt32List struct {
	KeyIds               map[string]*Int32List `protobuf:"bytes,1,rep,name=key_ids,json=keyIds,proto3" json:"key_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MapStringToInt32List) Reset()         { *m = MapStringToInt32List{} }
func (m *MapStringToInt32List) String() string { return proto.CompactTextString(m) }
func (*MapStringToInt32List) ProtoMessage()    {}
func (*MapStringToInt32List) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{12}
}

func (m *MapStringToInt32List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapStringToInt32List.Unmarshal(m, b)
}
func (m *MapStringToInt32List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapStringToInt32List.Marshal(b, m, deterministic)
}
func (m *MapStringToInt32List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapStringToInt32List.Merge(m, src)
}
func (m *MapStringToInt32List) XXX_Size() int {
	return xxx_messageInfo_MapStringToInt32List.Size(m)
}
func (m *MapStringToInt32List) XXX_DiscardUnknown() {
	xxx_messageInfo_MapStringToInt32List.DiscardUnknown(m)
}

var xxx_messageInfo_MapStringToInt32List proto.InternalMessageInfo

func (m *MapStringToInt32List) GetKeyIds() map[string]*Int32List {
	if m != nil {
		return m.KeyIds
	}
	return nil
}

type Int32List struct {
	Ids                  []int32  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int32List) Reset()         { *m = Int32List{} }
func (m *Int32List) String() string { return proto.CompactTextString(m) }
func (*Int32List) ProtoMessage()    {}
func (*Int32List) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{13}
}

func (m *Int32List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int32List.Unmarshal(m, b)
}
func (m *Int32List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int32List.Marshal(b, m, deterministic)
}
func (m *Int32List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int32List.Merge(m, src)
}
func (m *Int32List) XXX_Size() int {
	return xxx_messageInfo_Int32List.Size(m)
}
func (m *Int32List) XXX_DiscardUnknown() {
	xxx_messageInfo_Int32List.DiscardUnknown(m)
}

var xxx_messageInfo_Int32List proto.InternalMessageInfo

func (m *Int32List) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Keywords struct {
	// class ids for predictions
	PredefinedKeyids []int32 `protobuf:"varint,1,rep,packed,name=predefined_keyids,json=predefinedKeyids,proto3" json:"predefined_keyids,omitempty"`
	// class ids for ground truth
	GtPredefinedKeyids   []int32  `protobuf:"varint,2,rep,packed,name=gt_predefined_keyids,json=gtPredefinedKeyids,proto3" json:"gt_predefined_keyids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Keywords) Reset()         { *m = Keywords{} }
func (m *Keywords) String() string { return proto.CompactTextString(m) }
func (*Keywords) ProtoMessage()    {}
func (*Keywords) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{14}
}

func (m *Keywords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keywords.Unmarshal(m, b)
}
func (m *Keywords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keywords.Marshal(b, m, deterministic)
}
func (m *Keywords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keywords.Merge(m, src)
}
func (m *Keywords) XXX_Size() int {
	return xxx_messageInfo_Keywords.Size(m)
}
func (m *Keywords) XXX_DiscardUnknown() {
	xxx_messageInfo_Keywords.DiscardUnknown(m)
}

var xxx_messageInfo_Keywords proto.InternalMessageInfo

func (m *Keywords) GetPredefinedKeyids() []int32 {
	if m != nil {
		return m.PredefinedKeyids
	}
	return nil
}

func (m *Keywords) GetGtPredefinedKeyids() []int32 {
	if m != nil {
		return m.GtPredefinedKeyids
	}
	return nil
}

type AssetAnnoIndex struct {
	AssetAnnos           map[string]*Int32List            `protobuf:"bytes,1,rep,name=asset_annos,json=assetAnnos,proto3" json:"asset_annos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SubIndexes           map[string]*MapStringToInt32List `protobuf:"bytes,2,rep,name=sub_indexes,json=subIndexes,proto3" json:"sub_indexes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *AssetAnnoIndex) Reset()         { *m = AssetAnnoIndex{} }
func (m *AssetAnnoIndex) String() string { return proto.CompactTextString(m) }
func (*AssetAnnoIndex) ProtoMessage()    {}
func (*AssetAnnoIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{15}
}

func (m *AssetAnnoIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetAnnoIndex.Unmarshal(m, b)
}
func (m *AssetAnnoIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetAnnoIndex.Marshal(b, m, deterministic)
}
func (m *AssetAnnoIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetAnnoIndex.Merge(m, src)
}
func (m *AssetAnnoIndex) XXX_Size() int {
	return xxx_messageInfo_AssetAnnoIndex.Size(m)
}
func (m *AssetAnnoIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetAnnoIndex.DiscardUnknown(m)
}

var xxx_messageInfo_AssetAnnoIndex proto.InternalMessageInfo

func (m *AssetAnnoIndex) GetAssetAnnos() map[string]*Int32List {
	if m != nil {
		return m.AssetAnnos
	}
	return nil
}

func (m *AssetAnnoIndex) GetSubIndexes() map[string]*MapStringToInt32List {
	if m != nil {
		return m.SubIndexes
	}
	return nil
}

/// ========== tasks.mir ==========
type MirTasks struct {
	Tasks                map[string]*Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HeadTaskId           string           `protobuf:"bytes,2,opt,name=head_task_id,json=headTaskId,proto3" json:"head_task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MirTasks) Reset()         { *m = MirTasks{} }
func (m *MirTasks) String() string { return proto.CompactTextString(m) }
func (*MirTasks) ProtoMessage()    {}
func (*MirTasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{16}
}

func (m *MirTasks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirTasks.Unmarshal(m, b)
}
func (m *MirTasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirTasks.Marshal(b, m, deterministic)
}
func (m *MirTasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirTasks.Merge(m, src)
}
func (m *MirTasks) XXX_Size() int {
	return xxx_messageInfo_MirTasks.Size(m)
}
func (m *MirTasks) XXX_DiscardUnknown() {
	xxx_messageInfo_MirTasks.DiscardUnknown(m)
}

var xxx_messageInfo_MirTasks proto.InternalMessageInfo

func (m *MirTasks) GetTasks() map[string]*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *MirTasks) GetHeadTaskId() string {
	if m != nil {
		return m.HeadTaskId
	}
	return ""
}

type Task struct {
	Type TaskType `protobuf:"varint,1,opt,name=type,proto3,enum=mir.command.TaskType" json:"type,omitempty"`
	/// user defined task name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	/// auto generated unique id
	TaskId string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	/// execution time of this task
	Timestamp int64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	/// (for training task): result model for cmd train
	Model      *ModelMeta  `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	ReturnCode int32       `protobuf:"varint,8,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	ReturnMsg  string      `protobuf:"bytes,9,opt,name=return_msg,json=returnMsg,proto3" json:"return_msg,omitempty"`
	Evaluation *Evaluation `protobuf:"bytes,10,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
	/// (for import task): new types for cmd import, key: class name, value: asset count
	NewTypes map[string]int32 `protobuf:"bytes,11,rep,name=new_types,json=newTypes,proto3" json:"new_types,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	/// (for import task): reason for new types, True: added, False: ignored
	NewTypesAdded            bool     `protobuf:"varint,12,opt,name=new_types_added,json=newTypesAdded,proto3" json:"new_types_added,omitempty"`
	SerializedTaskParameters string   `protobuf:"bytes,102,opt,name=serialized_task_parameters,json=serializedTaskParameters,proto3" json:"serialized_task_parameters,omitempty"`
	SerializedExecutorConfig string   `protobuf:"bytes,103,opt,name=serialized_executor_config,json=serializedExecutorConfig,proto3" json:"serialized_executor_config,omitempty"`
	SrcRevs                  string   `protobuf:"bytes,104,opt,name=src_revs,json=srcRevs,proto3" json:"src_revs,omitempty"`
	DstRev                   string   `protobuf:"bytes,105,opt,name=dst_rev,json=dstRev,proto3" json:"dst_rev,omitempty"`
	Executor                 string   `protobuf:"bytes,106,opt,name=executor,proto3" json:"executor,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{17}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetType() TaskType {
	if m != nil {
		return m.Type
	}
	return TaskType_TaskTypeUnknown
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *Task) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Task) GetModel() *ModelMeta {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *Task) GetReturnCode() int32 {
	if m != nil {
		return m.ReturnCode
	}
	return 0
}

func (m *Task) GetReturnMsg() string {
	if m != nil {
		return m.ReturnMsg
	}
	return ""
}

func (m *Task) GetEvaluation() *Evaluation {
	if m != nil {
		return m.Evaluation
	}
	return nil
}

func (m *Task) GetNewTypes() map[string]int32 {
	if m != nil {
		return m.NewTypes
	}
	return nil
}

func (m *Task) GetNewTypesAdded() bool {
	if m != nil {
		return m.NewTypesAdded
	}
	return false
}

func (m *Task) GetSerializedTaskParameters() string {
	if m != nil {
		return m.SerializedTaskParameters
	}
	return ""
}

func (m *Task) GetSerializedExecutorConfig() string {
	if m != nil {
		return m.SerializedExecutorConfig
	}
	return ""
}

func (m *Task) GetSrcRevs() string {
	if m != nil {
		return m.SrcRevs
	}
	return ""
}

func (m *Task) GetDstRev() string {
	if m != nil {
		return m.DstRev
	}
	return ""
}

func (m *Task) GetExecutor() string {
	if m != nil {
		return m.Executor
	}
	return ""
}

type ModelMeta struct {
	/// hash for models.tar.gz
	ModelHash string `protobuf:"bytes,1,opt,name=model_hash,json=modelHash,proto3" json:"model_hash,omitempty"`
	/// model mAP
	MeanAveragePrecision float32 `protobuf:"fixed32,2,opt,name=mean_average_precision,json=meanAveragePrecision,proto3" json:"mean_average_precision,omitempty"`
	/// context generated by train command
	Context              string                 `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	Stages               map[string]*ModelStage `protobuf:"bytes,4,rep,name=stages,proto3" json:"stages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BestStageName        string                 `protobuf:"bytes,5,opt,name=best_stage_name,json=bestStageName,proto3" json:"best_stage_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ModelMeta) Reset()         { *m = ModelMeta{} }
func (m *ModelMeta) String() string { return proto.CompactTextString(m) }
func (*ModelMeta) ProtoMessage()    {}
func (*ModelMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{18}
}

func (m *ModelMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelMeta.Unmarshal(m, b)
}
func (m *ModelMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelMeta.Marshal(b, m, deterministic)
}
func (m *ModelMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelMeta.Merge(m, src)
}
func (m *ModelMeta) XXX_Size() int {
	return xxx_messageInfo_ModelMeta.Size(m)
}
func (m *ModelMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ModelMeta proto.InternalMessageInfo

func (m *ModelMeta) GetModelHash() string {
	if m != nil {
		return m.ModelHash
	}
	return ""
}

func (m *ModelMeta) GetMeanAveragePrecision() float32 {
	if m != nil {
		return m.MeanAveragePrecision
	}
	return 0
}

func (m *ModelMeta) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *ModelMeta) GetStages() map[string]*ModelStage {
	if m != nil {
		return m.Stages
	}
	return nil
}

func (m *ModelMeta) GetBestStageName() string {
	if m != nil {
		return m.BestStageName
	}
	return ""
}

type ModelStage struct {
	StageName            string   `protobuf:"bytes,1,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
	Files                []string `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MAP                  float32  `protobuf:"fixed32,4,opt,name=mAP,proto3" json:"mAP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelStage) Reset()         { *m = ModelStage{} }
func (m *ModelStage) String() string { return proto.CompactTextString(m) }
func (*ModelStage) ProtoMessage()    {}
func (*ModelStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{19}
}

func (m *ModelStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelStage.Unmarshal(m, b)
}
func (m *ModelStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelStage.Marshal(b, m, deterministic)
}
func (m *ModelStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelStage.Merge(m, src)
}
func (m *ModelStage) XXX_Size() int {
	return xxx_messageInfo_ModelStage.Size(m)
}
func (m *ModelStage) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelStage.DiscardUnknown(m)
}

var xxx_messageInfo_ModelStage proto.InternalMessageInfo

func (m *ModelStage) GetStageName() string {
	if m != nil {
		return m.StageName
	}
	return ""
}

func (m *ModelStage) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *ModelStage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ModelStage) GetMAP() float32 {
	if m != nil {
		return m.MAP
	}
	return 0
}

type Evaluation struct {
	Config *EvaluateConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// key: prediction dataset id, value: evaluation result for ground truth and prediction dataset
	DatasetEvaluations   map[string]*SingleDatasetEvaluation `protobuf:"bytes,2,rep,name=dataset_evaluations,json=datasetEvaluations,proto3" json:"dataset_evaluations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Evaluation) Reset()         { *m = Evaluation{} }
func (m *Evaluation) String() string { return proto.CompactTextString(m) }
func (*Evaluation) ProtoMessage()    {}
func (*Evaluation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{20}
}

func (m *Evaluation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Evaluation.Unmarshal(m, b)
}
func (m *Evaluation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Evaluation.Marshal(b, m, deterministic)
}
func (m *Evaluation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Evaluation.Merge(m, src)
}
func (m *Evaluation) XXX_Size() int {
	return xxx_messageInfo_Evaluation.Size(m)
}
func (m *Evaluation) XXX_DiscardUnknown() {
	xxx_messageInfo_Evaluation.DiscardUnknown(m)
}

var xxx_messageInfo_Evaluation proto.InternalMessageInfo

func (m *Evaluation) GetConfig() *EvaluateConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Evaluation) GetDatasetEvaluations() map[string]*SingleDatasetEvaluation {
	if m != nil {
		return m.DatasetEvaluations
	}
	return nil
}

type EvaluateConfig struct {
	GtDatasetId          string   `protobuf:"bytes,1,opt,name=gt_dataset_id,json=gtDatasetId,proto3" json:"gt_dataset_id,omitempty"`
	PredDatasetIds       []string `protobuf:"bytes,2,rep,name=pred_dataset_ids,json=predDatasetIds,proto3" json:"pred_dataset_ids,omitempty"`
	ConfThr              float32  `protobuf:"fixed32,3,opt,name=conf_thr,json=confThr,proto3" json:"conf_thr,omitempty"`
	IouThrsInterval      string   `protobuf:"bytes,4,opt,name=iou_thrs_interval,json=iouThrsInterval,proto3" json:"iou_thrs_interval,omitempty"`
	NeedPrCurve          bool     `protobuf:"varint,5,opt,name=need_pr_curve,json=needPrCurve,proto3" json:"need_pr_curve,omitempty"`
	NeedCk               bool     `protobuf:"varint,7,opt,name=need_ck,json=needCk,proto3" json:"need_ck,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvaluateConfig) Reset()         { *m = EvaluateConfig{} }
func (m *EvaluateConfig) String() string { return proto.CompactTextString(m) }
func (*EvaluateConfig) ProtoMessage()    {}
func (*EvaluateConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{21}
}

func (m *EvaluateConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateConfig.Unmarshal(m, b)
}
func (m *EvaluateConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateConfig.Marshal(b, m, deterministic)
}
func (m *EvaluateConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateConfig.Merge(m, src)
}
func (m *EvaluateConfig) XXX_Size() int {
	return xxx_messageInfo_EvaluateConfig.Size(m)
}
func (m *EvaluateConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateConfig proto.InternalMessageInfo

func (m *EvaluateConfig) GetGtDatasetId() string {
	if m != nil {
		return m.GtDatasetId
	}
	return ""
}

func (m *EvaluateConfig) GetPredDatasetIds() []string {
	if m != nil {
		return m.PredDatasetIds
	}
	return nil
}

func (m *EvaluateConfig) GetConfThr() float32 {
	if m != nil {
		return m.ConfThr
	}
	return 0
}

func (m *EvaluateConfig) GetIouThrsInterval() string {
	if m != nil {
		return m.IouThrsInterval
	}
	return ""
}

func (m *EvaluateConfig) GetNeedPrCurve() bool {
	if m != nil {
		return m.NeedPrCurve
	}
	return false
}

func (m *EvaluateConfig) GetNeedCk() bool {
	if m != nil {
		return m.NeedCk
	}
	return false
}

type SingleDatasetEvaluation struct {
	ConfThr               float32                         `protobuf:"fixed32,1,opt,name=conf_thr,json=confThr,proto3" json:"conf_thr,omitempty"`
	GtDatasetId           string                          `protobuf:"bytes,2,opt,name=gt_dataset_id,json=gtDatasetId,proto3" json:"gt_dataset_id,omitempty"`
	PredDatasetId         string                          `protobuf:"bytes,3,opt,name=pred_dataset_id,json=predDatasetId,proto3" json:"pred_dataset_id,omitempty"`
	IouEvaluations        map[string]*SingleIouEvaluation `protobuf:"bytes,4,rep,name=iou_evaluations,json=iouEvaluations,proto3" json:"iou_evaluations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IouAveragedEvaluation *SingleIouEvaluation            `protobuf:"bytes,5,opt,name=iou_averaged_evaluation,json=iouAveragedEvaluation,proto3" json:"iou_averaged_evaluation,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                        `json:"-"`
	XXX_unrecognized      []byte                          `json:"-"`
	XXX_sizecache         int32                           `json:"-"`
}

func (m *SingleDatasetEvaluation) Reset()         { *m = SingleDatasetEvaluation{} }
func (m *SingleDatasetEvaluation) String() string { return proto.CompactTextString(m) }
func (*SingleDatasetEvaluation) ProtoMessage()    {}
func (*SingleDatasetEvaluation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{22}
}

func (m *SingleDatasetEvaluation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleDatasetEvaluation.Unmarshal(m, b)
}
func (m *SingleDatasetEvaluation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleDatasetEvaluation.Marshal(b, m, deterministic)
}
func (m *SingleDatasetEvaluation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleDatasetEvaluation.Merge(m, src)
}
func (m *SingleDatasetEvaluation) XXX_Size() int {
	return xxx_messageInfo_SingleDatasetEvaluation.Size(m)
}
func (m *SingleDatasetEvaluation) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleDatasetEvaluation.DiscardUnknown(m)
}

var xxx_messageInfo_SingleDatasetEvaluation proto.InternalMessageInfo

func (m *SingleDatasetEvaluation) GetConfThr() float32 {
	if m != nil {
		return m.ConfThr
	}
	return 0
}

func (m *SingleDatasetEvaluation) GetGtDatasetId() string {
	if m != nil {
		return m.GtDatasetId
	}
	return ""
}

func (m *SingleDatasetEvaluation) GetPredDatasetId() string {
	if m != nil {
		return m.PredDatasetId
	}
	return ""
}

func (m *SingleDatasetEvaluation) GetIouEvaluations() map[string]*SingleIouEvaluation {
	if m != nil {
		return m.IouEvaluations
	}
	return nil
}

func (m *SingleDatasetEvaluation) GetIouAveragedEvaluation() *SingleIouEvaluation {
	if m != nil {
		return m.IouAveragedEvaluation
	}
	return nil
}

type SingleIouEvaluation struct {
	CiEvaluations        map[int32]*SingleEvaluationElement     `protobuf:"bytes,1,rep,name=ci_evaluations,json=ciEvaluations,proto3" json:"ci_evaluations,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CiAveragedEvaluation *SingleEvaluationElement               `protobuf:"bytes,2,opt,name=ci_averaged_evaluation,json=ciAveragedEvaluation,proto3" json:"ci_averaged_evaluation,omitempty"`
	CkEvaluations        map[string]*SingleCkTotalSubEvaluation `protobuf:"bytes,3,rep,name=ck_evaluations,json=ckEvaluations,proto3" json:"ck_evaluations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SingleIouEvaluation) Reset()         { *m = SingleIouEvaluation{} }
func (m *SingleIouEvaluation) String() string { return proto.CompactTextString(m) }
func (*SingleIouEvaluation) ProtoMessage()    {}
func (*SingleIouEvaluation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{23}
}

func (m *SingleIouEvaluation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleIouEvaluation.Unmarshal(m, b)
}
func (m *SingleIouEvaluation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleIouEvaluation.Marshal(b, m, deterministic)
}
func (m *SingleIouEvaluation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleIouEvaluation.Merge(m, src)
}
func (m *SingleIouEvaluation) XXX_Size() int {
	return xxx_messageInfo_SingleIouEvaluation.Size(m)
}
func (m *SingleIouEvaluation) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleIouEvaluation.DiscardUnknown(m)
}

var xxx_messageInfo_SingleIouEvaluation proto.InternalMessageInfo

func (m *SingleIouEvaluation) GetCiEvaluations() map[int32]*SingleEvaluationElement {
	if m != nil {
		return m.CiEvaluations
	}
	return nil
}

func (m *SingleIouEvaluation) GetCiAveragedEvaluation() *SingleEvaluationElement {
	if m != nil {
		return m.CiAveragedEvaluation
	}
	return nil
}

func (m *SingleIouEvaluation) GetCkEvaluations() map[string]*SingleCkTotalSubEvaluation {
	if m != nil {
		return m.CkEvaluations
	}
	return nil
}

type SingleEvaluationElement struct {
	Ap                   float32       `protobuf:"fixed32,1,opt,name=ap,proto3" json:"ap,omitempty"`
	Ar                   float32       `protobuf:"fixed32,2,opt,name=ar,proto3" json:"ar,omitempty"`
	Tp                   int32         `protobuf:"varint,3,opt,name=tp,proto3" json:"tp,omitempty"`
	Fp                   int32         `protobuf:"varint,4,opt,name=fp,proto3" json:"fp,omitempty"`
	Fn                   int32         `protobuf:"varint,5,opt,name=fn,proto3" json:"fn,omitempty"`
	PrCurve              []*FloatPoint `protobuf:"bytes,6,rep,name=pr_curve,json=prCurve,proto3" json:"pr_curve,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SingleEvaluationElement) Reset()         { *m = SingleEvaluationElement{} }
func (m *SingleEvaluationElement) String() string { return proto.CompactTextString(m) }
func (*SingleEvaluationElement) ProtoMessage()    {}
func (*SingleEvaluationElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{24}
}

func (m *SingleEvaluationElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleEvaluationElement.Unmarshal(m, b)
}
func (m *SingleEvaluationElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleEvaluationElement.Marshal(b, m, deterministic)
}
func (m *SingleEvaluationElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleEvaluationElement.Merge(m, src)
}
func (m *SingleEvaluationElement) XXX_Size() int {
	return xxx_messageInfo_SingleEvaluationElement.Size(m)
}
func (m *SingleEvaluationElement) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleEvaluationElement.DiscardUnknown(m)
}

var xxx_messageInfo_SingleEvaluationElement proto.InternalMessageInfo

func (m *SingleEvaluationElement) GetAp() float32 {
	if m != nil {
		return m.Ap
	}
	return 0
}

func (m *SingleEvaluationElement) GetAr() float32 {
	if m != nil {
		return m.Ar
	}
	return 0
}

func (m *SingleEvaluationElement) GetTp() int32 {
	if m != nil {
		return m.Tp
	}
	return 0
}

func (m *SingleEvaluationElement) GetFp() int32 {
	if m != nil {
		return m.Fp
	}
	return 0
}

func (m *SingleEvaluationElement) GetFn() int32 {
	if m != nil {
		return m.Fn
	}
	return 0
}

func (m *SingleEvaluationElement) GetPrCurve() []*FloatPoint {
	if m != nil {
		return m.PrCurve
	}
	return nil
}

type SingleCkTotalSubEvaluation struct {
	Total                *SingleEvaluationElement            `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Sub                  map[string]*SingleEvaluationElement `protobuf:"bytes,2,rep,name=sub,proto3" json:"sub,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *SingleCkTotalSubEvaluation) Reset()         { *m = SingleCkTotalSubEvaluation{} }
func (m *SingleCkTotalSubEvaluation) String() string { return proto.CompactTextString(m) }
func (*SingleCkTotalSubEvaluation) ProtoMessage()    {}
func (*SingleCkTotalSubEvaluation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{25}
}

func (m *SingleCkTotalSubEvaluation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleCkTotalSubEvaluation.Unmarshal(m, b)
}
func (m *SingleCkTotalSubEvaluation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleCkTotalSubEvaluation.Marshal(b, m, deterministic)
}
func (m *SingleCkTotalSubEvaluation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleCkTotalSubEvaluation.Merge(m, src)
}
func (m *SingleCkTotalSubEvaluation) XXX_Size() int {
	return xxx_messageInfo_SingleCkTotalSubEvaluation.Size(m)
}
func (m *SingleCkTotalSubEvaluation) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleCkTotalSubEvaluation.DiscardUnknown(m)
}

var xxx_messageInfo_SingleCkTotalSubEvaluation proto.InternalMessageInfo

func (m *SingleCkTotalSubEvaluation) GetTotal() *SingleEvaluationElement {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *SingleCkTotalSubEvaluation) GetSub() map[string]*SingleEvaluationElement {
	if m != nil {
		return m.Sub
	}
	return nil
}

type FloatPoint struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FloatPoint) Reset()         { *m = FloatPoint{} }
func (m *FloatPoint) String() string { return proto.CompactTextString(m) }
func (*FloatPoint) ProtoMessage()    {}
func (*FloatPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{26}
}

func (m *FloatPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatPoint.Unmarshal(m, b)
}
func (m *FloatPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatPoint.Marshal(b, m, deterministic)
}
func (m *FloatPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatPoint.Merge(m, src)
}
func (m *FloatPoint) XXX_Size() int {
	return xxx_messageInfo_FloatPoint.Size(m)
}
func (m *FloatPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatPoint.DiscardUnknown(m)
}

var xxx_messageInfo_FloatPoint proto.InternalMessageInfo

func (m *FloatPoint) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *FloatPoint) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *FloatPoint) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

/// ========== context.mir ==========
type MirContext struct {
	/// total images count
	ImagesCnt int32 `protobuf:"varint,1,opt,name=images_cnt,json=imagesCnt,proto3" json:"images_cnt,omitempty"`
	/// total negative images count (images without any annotations), from pred
	NegativeImagesCnt int32 `protobuf:"varint,2,opt,name=negative_images_cnt,json=negativeImagesCnt,proto3" json:"negative_images_cnt,omitempty"`
	/// total negative images count (images without any project class names), from pred
	ProjectNegativeImagesCnt int32 `protobuf:"varint,3,opt,name=project_negative_images_cnt,json=projectNegativeImagesCnt,proto3" json:"project_negative_images_cnt,omitempty"`
	/// key: class id, value: images count, from pred
	PredefinedKeyidsCnt map[int32]int32 `protobuf:"bytes,4,rep,name=predefined_keyids_cnt,json=predefinedKeyidsCnt,proto3" json:"predefined_keyids_cnt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	/// key: class id (only in this project), value: images count, from pred
	ProjectPredefinedKeyidsCnt map[int32]int32 `protobuf:"bytes,5,rep,name=project_predefined_keyids_cnt,json=projectPredefinedKeyidsCnt,proto3" json:"project_predefined_keyids_cnt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	/// from pred and gt
	CksCnt               map[string]*SingleMapCount `protobuf:"bytes,6,rep,name=cks_cnt,json=cksCnt,proto3" json:"cks_cnt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AssetQualityHist     map[string]int32           `protobuf:"bytes,8,rep,name=asset_quality_hist,json=assetQualityHist,proto3" json:"asset_quality_hist,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	AssetAreaHist        map[int32]int32            `protobuf:"bytes,9,rep,name=asset_area_hist,json=assetAreaHist,proto3" json:"asset_area_hist,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	AssetBytesHist       map[string]int32           `protobuf:"bytes,10,rep,name=asset_bytes_hist,json=assetBytesHist,proto3" json:"asset_bytes_hist,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	AssetHwRatioHist     map[string]int32           `protobuf:"bytes,12,rep,name=asset_hw_ratio_hist,json=assetHwRatioHist,proto3" json:"asset_hw_ratio_hist,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TotalAssetMbytes     int32                      `protobuf:"varint,11,opt,name=total_asset_mbytes,json=totalAssetMbytes,proto3" json:"total_asset_mbytes,omitempty"`
	PredStats            *AnnoStats                 `protobuf:"bytes,100,opt,name=pred_stats,json=predStats,proto3" json:"pred_stats,omitempty"`
	GtStats              *AnnoStats                 `protobuf:"bytes,101,opt,name=gt_stats,json=gtStats,proto3" json:"gt_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MirContext) Reset()         { *m = MirContext{} }
func (m *MirContext) String() string { return proto.CompactTextString(m) }
func (*MirContext) ProtoMessage()    {}
func (*MirContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{27}
}

func (m *MirContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MirContext.Unmarshal(m, b)
}
func (m *MirContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MirContext.Marshal(b, m, deterministic)
}
func (m *MirContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MirContext.Merge(m, src)
}
func (m *MirContext) XXX_Size() int {
	return xxx_messageInfo_MirContext.Size(m)
}
func (m *MirContext) XXX_DiscardUnknown() {
	xxx_messageInfo_MirContext.DiscardUnknown(m)
}

var xxx_messageInfo_MirContext proto.InternalMessageInfo

func (m *MirContext) GetImagesCnt() int32 {
	if m != nil {
		return m.ImagesCnt
	}
	return 0
}

func (m *MirContext) GetNegativeImagesCnt() int32 {
	if m != nil {
		return m.NegativeImagesCnt
	}
	return 0
}

func (m *MirContext) GetProjectNegativeImagesCnt() int32 {
	if m != nil {
		return m.ProjectNegativeImagesCnt
	}
	return 0
}

func (m *MirContext) GetPredefinedKeyidsCnt() map[int32]int32 {
	if m != nil {
		return m.PredefinedKeyidsCnt
	}
	return nil
}

func (m *MirContext) GetProjectPredefinedKeyidsCnt() map[int32]int32 {
	if m != nil {
		return m.ProjectPredefinedKeyidsCnt
	}
	return nil
}

func (m *MirContext) GetCksCnt() map[string]*SingleMapCount {
	if m != nil {
		return m.CksCnt
	}
	return nil
}

func (m *MirContext) GetAssetQualityHist() map[string]int32 {
	if m != nil {
		return m.AssetQualityHist
	}
	return nil
}

func (m *MirContext) GetAssetAreaHist() map[int32]int32 {
	if m != nil {
		return m.AssetAreaHist
	}
	return nil
}

func (m *MirContext) GetAssetBytesHist() map[string]int32 {
	if m != nil {
		return m.AssetBytesHist
	}
	return nil
}

func (m *MirContext) GetAssetHwRatioHist() map[string]int32 {
	if m != nil {
		return m.AssetHwRatioHist
	}
	return nil
}

func (m *MirContext) GetTotalAssetMbytes() int32 {
	if m != nil {
		return m.TotalAssetMbytes
	}
	return 0
}

func (m *MirContext) GetPredStats() *AnnoStats {
	if m != nil {
		return m.PredStats
	}
	return nil
}

func (m *MirContext) GetGtStats() *AnnoStats {
	if m != nil {
		return m.GtStats
	}
	return nil
}

type SingleMapCount struct {
	Cnt                  int32            `protobuf:"varint,1,opt,name=cnt,proto3" json:"cnt,omitempty"`
	SubCnt               map[string]int32 `protobuf:"bytes,2,rep,name=sub_cnt,json=subCnt,proto3" json:"sub_cnt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SingleMapCount) Reset()         { *m = SingleMapCount{} }
func (m *SingleMapCount) String() string { return proto.CompactTextString(m) }
func (*SingleMapCount) ProtoMessage()    {}
func (*SingleMapCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{28}
}

func (m *SingleMapCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleMapCount.Unmarshal(m, b)
}
func (m *SingleMapCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleMapCount.Marshal(b, m, deterministic)
}
func (m *SingleMapCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleMapCount.Merge(m, src)
}
func (m *SingleMapCount) XXX_Size() int {
	return xxx_messageInfo_SingleMapCount.Size(m)
}
func (m *SingleMapCount) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleMapCount.DiscardUnknown(m)
}

var xxx_messageInfo_SingleMapCount proto.InternalMessageInfo

func (m *SingleMapCount) GetCnt() int32 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

func (m *SingleMapCount) GetSubCnt() map[string]int32 {
	if m != nil {
		return m.SubCnt
	}
	return nil
}

type AnnoStats struct {
	TotalCnt             int32                      `protobuf:"varint,1,opt,name=total_cnt,json=totalCnt,proto3" json:"total_cnt,omitempty"`
	PositiveAssetCnt     int32                      `protobuf:"varint,2,opt,name=positive_asset_cnt,json=positiveAssetCnt,proto3" json:"positive_asset_cnt,omitempty"`
	NegativeAssetCnt     int32                      `protobuf:"varint,3,opt,name=negative_asset_cnt,json=negativeAssetCnt,proto3" json:"negative_asset_cnt,omitempty"`
	QualityHist          map[string]int32           `protobuf:"bytes,4,rep,name=quality_hist,json=qualityHist,proto3" json:"quality_hist,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	AreaHist             map[int32]int32            `protobuf:"bytes,5,rep,name=area_hist,json=areaHist,proto3" json:"area_hist,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	AreaRatioHist        map[string]int32           `protobuf:"bytes,6,rep,name=area_ratio_hist,json=areaRatioHist,proto3" json:"area_ratio_hist,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TagsCnt              map[string]*SingleMapCount `protobuf:"bytes,7,rep,name=tags_cnt,json=tagsCnt,proto3" json:"tags_cnt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClassIdsCnt          map[int32]int32            `protobuf:"bytes,8,rep,name=class_ids_cnt,json=classIdsCnt,proto3" json:"class_ids_cnt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AnnoStats) Reset()         { *m = AnnoStats{} }
func (m *AnnoStats) String() string { return proto.CompactTextString(m) }
func (*AnnoStats) ProtoMessage()    {}
func (*AnnoStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_2abd7a3439f4e041, []int{29}
}

func (m *AnnoStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnoStats.Unmarshal(m, b)
}
func (m *AnnoStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnoStats.Marshal(b, m, deterministic)
}
func (m *AnnoStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnoStats.Merge(m, src)
}
func (m *AnnoStats) XXX_Size() int {
	return xxx_messageInfo_AnnoStats.Size(m)
}
func (m *AnnoStats) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnoStats.DiscardUnknown(m)
}

var xxx_messageInfo_AnnoStats proto.InternalMessageInfo

func (m *AnnoStats) GetTotalCnt() int32 {
	if m != nil {
		return m.TotalCnt
	}
	return 0
}

func (m *AnnoStats) GetPositiveAssetCnt() int32 {
	if m != nil {
		return m.PositiveAssetCnt
	}
	return 0
}

func (m *AnnoStats) GetNegativeAssetCnt() int32 {
	if m != nil {
		return m.NegativeAssetCnt
	}
	return 0
}

func (m *AnnoStats) GetQualityHist() map[string]int32 {
	if m != nil {
		return m.QualityHist
	}
	return nil
}

func (m *AnnoStats) GetAreaHist() map[int32]int32 {
	if m != nil {
		return m.AreaHist
	}
	return nil
}

func (m *AnnoStats) GetAreaRatioHist() map[string]int32 {
	if m != nil {
		return m.AreaRatioHist
	}
	return nil
}

func (m *AnnoStats) GetTagsCnt() map[string]*SingleMapCount {
	if m != nil {
		return m.TagsCnt
	}
	return nil
}

func (m *AnnoStats) GetClassIdsCnt() map[int32]int32 {
	if m != nil {
		return m.ClassIdsCnt
	}
	return nil
}

func init() {
	proto.RegisterEnum("mir.command.TvtType", TvtType_name, TvtType_value)
	proto.RegisterEnum("mir.command.AssetType", AssetType_name, AssetType_value)
	proto.RegisterEnum("mir.command.TaskType", TaskType_name, TaskType_value)
	proto.RegisterEnum("mir.command.TaskState", TaskState_name, TaskState_value)
	proto.RegisterEnum("mir.command.Sha1Type", Sha1Type_name, Sha1Type_value)
	proto.RegisterEnum("mir.command.MirStorage", MirStorage_name, MirStorage_value)
	proto.RegisterEnum("mir.command.LabelFormat", LabelFormat_name, LabelFormat_value)
	proto.RegisterEnum("mir.command.ConfusionMatrixType", ConfusionMatrixType_name, ConfusionMatrixType_value)
	proto.RegisterType((*MirMetadatas)(nil), "mir.command.MirMetadatas")
	proto.RegisterMapType((map[string]*MetadataAttributes)(nil), "mir.command.MirMetadatas.AttributesEntry")
	proto.RegisterType((*MetadataAttributes)(nil), "mir.command.MetadataAttributes")
	proto.RegisterType((*Timestamp)(nil), "mir.command.Timestamp")
	proto.RegisterType((*MirAnnotations)(nil), "mir.command.MirAnnotations")
	proto.RegisterMapType((map[string]*SingleImageCks)(nil), "mir.command.MirAnnotations.ImageCksEntry")
	proto.RegisterType((*SingleTaskAnnotations)(nil), "mir.command.SingleTaskAnnotations")
	proto.RegisterMapType((map[string]*SingleImageAnnotations)(nil), "mir.command.SingleTaskAnnotations.ImageAnnotationsEntry")
	proto.RegisterType((*SingleImageAnnotations)(nil), "mir.command.SingleImageAnnotations")
	proto.RegisterType((*SingleImageCks)(nil), "mir.command.SingleImageCks")
	proto.RegisterMapType((map[string]string)(nil), "mir.command.SingleImageCks.CksEntry")
	proto.RegisterType((*Annotation)(nil), "mir.command.Annotation")
	proto.RegisterMapType((map[string]string)(nil), "mir.command.Annotation.TagsEntry")
	proto.RegisterType((*Rect)(nil), "mir.command.Rect")
	proto.RegisterType((*MirKeywords)(nil), "mir.command.MirKeywords")
	proto.RegisterMapType((map[string]*AssetAnnoIndex)(nil), "mir.command.MirKeywords.CkIdxEntry")
	proto.RegisterMapType((map[string]*Keywords)(nil), "mir.command.MirKeywords.KeywordsEntry")
	proto.RegisterType((*KeywordToIndex)(nil), "mir.command.KeywordToIndex")
	proto.RegisterMapType((map[int32]*MapStringToInt32List)(nil), "mir.command.KeywordToIndex.CisEntry")
	proto.RegisterMapType((map[string]*AssetAnnoIndex)(nil), "mir.command.KeywordToIndex.TagsEntry")
	proto.RegisterType((*StringList)(nil), "mir.command.StringList")
	proto.RegisterType((*MapStringToInt32List)(nil), "mir.command.MapStringToInt32List")
	proto.RegisterMapType((map[string]*Int32List)(nil), "mir.command.MapStringToInt32List.KeyIdsEntry")
	proto.RegisterType((*Int32List)(nil), "mir.command.Int32List")
	proto.RegisterType((*Keywords)(nil), "mir.command.Keywords")
	proto.RegisterType((*AssetAnnoIndex)(nil), "mir.command.AssetAnnoIndex")
	proto.RegisterMapType((map[string]*Int32List)(nil), "mir.command.AssetAnnoIndex.AssetAnnosEntry")
	proto.RegisterMapType((map[string]*MapStringToInt32List)(nil), "mir.command.AssetAnnoIndex.SubIndexesEntry")
	proto.RegisterType((*MirTasks)(nil), "mir.command.MirTasks")
	proto.RegisterMapType((map[string]*Task)(nil), "mir.command.MirTasks.TasksEntry")
	proto.RegisterType((*Task)(nil), "mir.command.Task")
	proto.RegisterMapType((map[string]int32)(nil), "mir.command.Task.NewTypesEntry")
	proto.RegisterType((*ModelMeta)(nil), "mir.command.ModelMeta")
	proto.RegisterMapType((map[string]*ModelStage)(nil), "mir.command.ModelMeta.StagesEntry")
	proto.RegisterType((*ModelStage)(nil), "mir.command.ModelStage")
	proto.RegisterType((*Evaluation)(nil), "mir.command.Evaluation")
	proto.RegisterMapType((map[string]*SingleDatasetEvaluation)(nil), "mir.command.Evaluation.DatasetEvaluationsEntry")
	proto.RegisterType((*EvaluateConfig)(nil), "mir.command.EvaluateConfig")
	proto.RegisterType((*SingleDatasetEvaluation)(nil), "mir.command.SingleDatasetEvaluation")
	proto.RegisterMapType((map[string]*SingleIouEvaluation)(nil), "mir.command.SingleDatasetEvaluation.IouEvaluationsEntry")
	proto.RegisterType((*SingleIouEvaluation)(nil), "mir.command.SingleIouEvaluation")
	proto.RegisterMapType((map[int32]*SingleEvaluationElement)(nil), "mir.command.SingleIouEvaluation.CiEvaluationsEntry")
	proto.RegisterMapType((map[string]*SingleCkTotalSubEvaluation)(nil), "mir.command.SingleIouEvaluation.CkEvaluationsEntry")
	proto.RegisterType((*SingleEvaluationElement)(nil), "mir.command.SingleEvaluationElement")
	proto.RegisterType((*SingleCkTotalSubEvaluation)(nil), "mir.command.SingleCkTotalSubEvaluation")
	proto.RegisterMapType((map[string]*SingleEvaluationElement)(nil), "mir.command.SingleCkTotalSubEvaluation.SubEntry")
	proto.RegisterType((*FloatPoint)(nil), "mir.command.FloatPoint")
	proto.RegisterType((*MirContext)(nil), "mir.command.MirContext")
	proto.RegisterMapType((map[int32]int32)(nil), "mir.command.MirContext.AssetAreaHistEntry")
	proto.RegisterMapType((map[string]int32)(nil), "mir.command.MirContext.AssetBytesHistEntry")
	proto.RegisterMapType((map[string]int32)(nil), "mir.command.MirContext.AssetHwRatioHistEntry")
	proto.RegisterMapType((map[string]int32)(nil), "mir.command.MirContext.AssetQualityHistEntry")
	proto.RegisterMapType((map[string]*SingleMapCount)(nil), "mir.command.MirContext.CksCntEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "mir.command.MirContext.PredefinedKeyidsCntEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "mir.command.MirContext.ProjectPredefinedKeyidsCntEntry")
	proto.RegisterType((*SingleMapCount)(nil), "mir.command.SingleMapCount")
	proto.RegisterMapType((map[string]int32)(nil), "mir.command.SingleMapCount.SubCntEntry")
	proto.RegisterType((*AnnoStats)(nil), "mir.command.AnnoStats")
	proto.RegisterMapType((map[int32]int32)(nil), "mir.command.AnnoStats.AreaHistEntry")
	proto.RegisterMapType((map[string]int32)(nil), "mir.command.AnnoStats.AreaRatioHistEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "mir.command.AnnoStats.ClassIdsCntEntry")
	proto.RegisterMapType((map[string]int32)(nil), "mir.command.AnnoStats.QualityHistEntry")
	proto.RegisterMapType((map[string]*SingleMapCount)(nil), "mir.command.AnnoStats.TagsCntEntry")
}

func init() {
	proto.RegisterFile("mir_command.proto", fileDescriptor_2abd7a3439f4e041)
}

var fileDescriptor_2abd7a3439f4e041 = []byte{
	// 3441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0xcd, 0x73, 0x1b, 0x47,
	0x76, 0x37, 0x06, 0x5f, 0x83, 0x07, 0x02, 0x6c, 0x36, 0x49, 0x09, 0x0b, 0xc7, 0x31, 0x17, 0xce,
	0x7a, 0x65, 0xda, 0x0b, 0xdb, 0xb4, 0x25, 0xad, 0xbd, 0xb2, 0x6b, 0x21, 0x88, 0x8c, 0x40, 0x0a,
	0x20, 0x3d, 0x80, 0x64, 0x4b, 0xd9, 0xca, 0xec, 0x10, 0xd3, 0x04, 0x7a, 0x01, 0xcc, 0xc0, 0x33,
	0x0d, 0x7e, 0xe8, 0x96, 0x53, 0x72, 0xcc, 0x3f, 0x90, 0x4a, 0x55, 0xaa, 0x72, 0xc9, 0x2d, 0xa9,
	0x5c, 0x52, 0x95, 0x53, 0x2e, 0x39, 0xe4, 0x98, 0x73, 0x8e, 0xa9, 0xca, 0xdf, 0x90, 0xca, 0x21,
	0xd5, 0x1f, 0x83, 0x99, 0x01, 0x06, 0xa4, 0xa8, 0xdd, 0x8b, 0x34, 0xfd, 0xeb, 0xf7, 0x5e, 0xbf,
	0xf7, 0xeb, 0xd7, 0xaf, 0x3f, 0x40, 0xd8, 0x98, 0x50, 0xcf, 0xec, 0xbb, 0x93, 0x89, 0xe5, 0xd8,
	0xf5, 0xa9, 0xe7, 0x32, 0x17, 0x17, 0x27, 0xd4, 0xab, 0x2b, 0xa8, 0xf6, 0x2f, 0x29, 0x58, 0x6b,
	0x53, 0xaf, 0x4d, 0x98, 0x65, 0x5b, 0xcc, 0xf2, 0x71, 0x0b, 0xc0, 0x62, 0xcc, 0xa3, 0xa7, 0x33,
	0x46, 0xfc, 0x4a, 0x6a, 0x27, 0x7d, 0xaf, 0xb8, 0xf7, 0x51, 0x3d, 0xa2, 0x52, 0x8f, 0x8a, 0xd7,
	0x1b, 0x73, 0xd9, 0x7d, 0x87, 0x79, 0x57, 0x46, 0x44, 0xb9, 0xfa, 0xe7, 0xb0, 0xbe, 0xd0, 0x8d,
	0x11, 0xa4, 0x47, 0xe4, 0xaa, 0x92, 0xda, 0x49, 0xdd, 0x2b, 0x18, 0xfc, 0x13, 0xdf, 0x87, 0xec,
	0xb9, 0x35, 0x9e, 0x91, 0x8a, 0xb6, 0x93, 0xba, 0x57, 0xdc, 0x7b, 0x3f, 0x3e, 0x94, 0x1a, 0x27,
	0x34, 0x63, 0x48, 0xe9, 0xaf, 0xb5, 0x5f, 0xa6, 0x6a, 0xff, 0xae, 0x01, 0x5e, 0x96, 0xc0, 0x3f,
	0x85, 0x35, 0xe1, 0x1b, 0x61, 0xa6, 0x63, 0x4d, 0x88, 0x1a, 0xac, 0xa8, 0xb0, 0x8e, 0x35, 0x21,
	0xf8, 0x4b, 0x28, 0x30, 0x3a, 0x21, 0x3e, 0xb3, 0x26, 0x53, 0x35, 0xf0, 0x9d, 0xd8, 0xc0, 0xbd,
	0xa0, 0xd7, 0x08, 0x05, 0xf1, 0xa7, 0xa0, 0xb3, 0x73, 0x66, 0xb2, 0xab, 0x29, 0xa9, 0xa4, 0x77,
	0x52, 0xf7, 0xca, 0x7b, 0x5b, 0x71, 0xa5, 0x73, 0xd6, 0xbb, 0x9a, 0x12, 0x23, 0xcf, 0xe4, 0x07,
	0xbe, 0x0f, 0x60, 0xf9, 0xdc, 0x0f, 0xa1, 0x92, 0x11, 0x2a, 0xf1, 0x71, 0x1a, 0xbc, 0x5b, 0x28,
	0x15, 0xac, 0xe0, 0x13, 0x6f, 0x41, 0xf6, 0x82, 0xda, 0x6c, 0x58, 0xc9, 0xee, 0xa4, 0xee, 0x65,
	0x0d, 0xd9, 0xc0, 0x77, 0x20, 0x37, 0x24, 0x74, 0x30, 0x64, 0x95, 0x9c, 0x80, 0x55, 0x0b, 0xff,
	0x0c, 0xca, 0x74, 0x62, 0x0d, 0x88, 0xd9, 0x1f, 0x5a, 0x8e, 0x43, 0xc6, 0x7e, 0x25, 0x2f, 0xfa,
	0x4b, 0x02, 0x6d, 0x2a, 0x10, 0xbf, 0x0b, 0x85, 0xd3, 0x2b, 0x46, 0x4c, 0x9f, 0xbe, 0x26, 0x15,
	0x5d, 0x48, 0xe8, 0x1c, 0xe8, 0xd2, 0xd7, 0xa4, 0xf6, 0x0d, 0x14, 0xe6, 0x11, 0xf3, 0xe1, 0x7d,
	0x66, 0x79, 0x4c, 0x10, 0x97, 0x36, 0x64, 0x03, 0x57, 0x41, 0xb7, 0x67, 0x9e, 0xc5, 0xa8, 0xeb,
	0x08, 0xc6, 0x34, 0x63, 0xde, 0xae, 0xfd, 0xb7, 0x06, 0xe5, 0x36, 0xf5, 0x1a, 0x8e, 0xe3, 0x32,
	0x81, 0xf8, 0x78, 0x07, 0xd6, 0x86, 0xc4, 0xb2, 0x4d, 0x66, 0xf9, 0x23, 0x93, 0xda, 0x42, 0xa5,
	0x60, 0x00, 0xc7, 0x7a, 0x96, 0x3f, 0x6a, 0xd9, 0x78, 0x1f, 0xd6, 0x06, 0x9e, 0x3b, 0x73, 0x6c,
	0x93, 0x79, 0x33, 0x36, 0x14, 0x8c, 0x16, 0xf7, 0x6a, 0x31, 0x7a, 0xba, 0xd4, 0x19, 0x8c, 0x09,
	0x57, 0x88, 0xd8, 0x36, 0x8a, 0x52, 0xaf, 0xc7, 0xd5, 0xf0, 0x63, 0x80, 0xa9, 0x47, 0x6c, 0xda,
	0x17, 0x9e, 0x65, 0xde, 0xd8, 0x48, 0x44, 0x0b, 0x1f, 0x40, 0x41, 0x51, 0x38, 0xf2, 0x2b, 0xd9,
	0xe4, 0x94, 0x8f, 0xe8, 0xd6, 0x5b, 0x82, 0xd9, 0x91, 0x4a, 0x79, 0x9d, 0xaa, 0x66, 0xf5, 0x07,
	0x28, 0xc5, 0xba, 0x12, 0xd2, 0xfd, 0xf3, 0x78, 0xba, 0xbf, 0x9b, 0xe0, 0x69, 0x60, 0x22, 0x92,
	0xea, 0x87, 0x19, 0x3d, 0x85, 0xb4, 0xda, 0x5f, 0x68, 0xb0, 0x9d, 0x18, 0x0d, 0x26, 0xb0, 0x21,
	0x23, 0xb0, 0x42, 0x50, 0x2d, 0xde, 0x5f, 0xde, 0x4c, 0x86, 0x0c, 0x28, 0x02, 0xc8, 0xc0, 0x10,
	0x5d, 0x80, 0xf1, 0x5d, 0xc8, 0xc7, 0x27, 0x34, 0xc7, 0xc4, 0x64, 0x56, 0x87, 0xb0, 0x9d, 0x68,
	0x23, 0x81, 0x81, 0xaf, 0xe2, 0x0c, 0x7c, 0xb0, 0x8a, 0x81, 0xe8, 0x64, 0x45, 0x16, 0xfd, 0x4b,
	0xb8, 0x93, 0x2c, 0x84, 0xbf, 0x82, 0x62, 0x34, 0x7a, 0x4d, 0x44, 0x7f, 0x37, 0xbe, 0xdc, 0xe6,
	0xfd, 0x46, 0x54, 0x56, 0xd1, 0xfb, 0xf7, 0x29, 0x28, 0xc7, 0xa7, 0x00, 0x3f, 0x80, 0x34, 0xcf,
	0x09, 0xc9, 0xe4, 0x9f, 0x5c, 0x33, 0x59, 0xf5, 0x79, 0x3a, 0x70, 0x05, 0xfc, 0x01, 0xc8, 0xe5,
	0x67, 0xfe, 0x38, 0xb3, 0xc6, 0x94, 0x5d, 0xa9, 0x25, 0xb3, 0x26, 0xc0, 0xef, 0x24, 0x56, 0x7d,
	0x00, 0xfa, 0x35, 0x99, 0xb2, 0x15, 0xe5, 0xa9, 0x10, 0xa5, 0xe0, 0xbf, 0x34, 0x80, 0x30, 0x12,
	0x2e, 0x48, 0x1d, 0x9b, 0x5c, 0x0a, 0xe5, 0xac, 0x21, 0x1b, 0xf8, 0x03, 0x48, 0x9f, 0xba, 0x97,
	0x8a, 0xe4, 0x8d, 0x98, 0xe7, 0x06, 0xe9, 0x33, 0x83, 0xf7, 0xe2, 0x9f, 0x80, 0xde, 0x1f, 0x5b,
	0xbe, 0xcf, 0x27, 0x34, 0x2d, 0xb4, 0xf3, 0xa2, 0xdd, 0xb2, 0x45, 0x15, 0xe8, 0xbb, 0x9e, 0x2c,
	0x5b, 0x29, 0x43, 0x36, 0x78, 0x6d, 0xe5, 0xbc, 0xcd, 0xc3, 0xca, 0x8a, 0xb0, 0x04, 0x97, 0x2a,
	0x2a, 0x7c, 0x1f, 0x32, 0xcc, 0x1a, 0xf8, 0x95, 0x9c, 0xe0, 0xec, 0xa7, 0x2b, 0xf8, 0xaf, 0xf7,
	0xac, 0x81, 0x22, 0x4c, 0x88, 0xe3, 0xcf, 0x40, 0xeb, 0x4f, 0x44, 0xe9, 0x2a, 0xef, 0xed, 0xc4,
	0x94, 0x9a, 0xae, 0x73, 0x36, 0xf3, 0xa9, 0xeb, 0xb4, 0x2d, 0xe6, 0xd1, 0x4b, 0x51, 0x2d, 0xb5,
	0xfe, 0x04, 0xff, 0x31, 0x14, 0x6d, 0xc2, 0xcc, 0x31, 0x75, 0x44, 0x42, 0xca, 0x9a, 0x56, 0xb0,
	0x09, 0x7b, 0x46, 0x1d, 0x9e, 0x93, 0x0f, 0xa1, 0x30, 0x1f, 0xe4, 0x56, 0xfc, 0x5a, 0x90, 0xe1,
	0x14, 0xe1, 0x35, 0x48, 0x05, 0xa4, 0xa6, 0x2e, 0x79, 0x4b, 0x4e, 0x63, 0xd6, 0x48, 0x5d, 0xf1,
	0xd6, 0x85, 0xa2, 0x2c, 0x75, 0xc1, 0x5b, 0x43, 0x41, 0x54, 0xd6, 0x48, 0x0d, 0x39, 0x49, 0x1e,
	0x0f, 0x93, 0xaf, 0xc6, 0xc1, 0x98, 0x04, 0x24, 0x49, 0xac, 0xc1, 0xa1, 0xda, 0xbf, 0xa5, 0xa1,
	0xd8, 0xa6, 0xde, 0x11, 0xb9, 0xba, 0x70, 0x3d, 0xdb, 0xc7, 0x8f, 0x41, 0x1f, 0xa9, 0x6f, 0x95,
	0x6c, 0x1f, 0x2e, 0x16, 0xa0, 0x40, 0xb6, 0x1e, 0x7c, 0xa8, 0xea, 0x13, 0xe8, 0xe1, 0x07, 0xa0,
	0xf3, 0x9a, 0x66, 0x52, 0xfb, 0x52, 0xf0, 0xb8, 0x58, 0x5d, 0x94, 0x5e, 0xcf, 0x6d, 0xf1, 0x04,
	0x31, 0xf2, 0x5c, 0xb8, 0x65, 0x5f, 0xe2, 0x3d, 0xc8, 0x0d, 0x98, 0xd0, 0xd2, 0x6f, 0xd6, 0xca,
	0x0e, 0x18, 0xd7, 0xf9, 0x1a, 0x72, 0xfd, 0x91, 0xd0, 0x29, 0x08, 0x6f, 0x3f, 0x58, 0xe9, 0x6d,
	0x73, 0xd4, 0xb2, 0x2f, 0xa5, 0xab, 0xd9, 0x3e, 0xff, 0xae, 0x1a, 0x50, 0x8a, 0x85, 0x90, 0x30,
	0x37, 0x1f, 0xc7, 0x6b, 0xc4, 0x76, 0x92, 0x47, 0xd1, 0xaa, 0x50, 0x7d, 0x0e, 0x10, 0x0e, 0x74,
	0xdb, 0xb2, 0x2b, 0x36, 0x61, 0x9e, 0x9a, 0x2a, 0xc4, 0x68, 0xd9, 0xd5, 0x50, 0xfa, 0x30, 0xa3,
	0xa7, 0x51, 0xe6, 0x30, 0xa3, 0x67, 0x50, 0xf6, 0x30, 0xa3, 0x67, 0x51, 0xee, 0x30, 0xa3, 0xe7,
	0x50, 0xbe, 0xf6, 0xcf, 0x1a, 0x94, 0xe3, 0xf4, 0x88, 0x7a, 0x41, 0x93, 0xeb, 0x45, 0x5c, 0xb2,
	0xde, 0xa4, 0xf3, 0x7a, 0x41, 0x79, 0xed, 0x92, 0x8b, 0x46, 0x16, 0xad, 0x9f, 0x5d, 0xa7, 0xb8,
	0xb0, 0x70, 0xaa, 0x2f, 0x41, 0x0f, 0x6c, 0x45, 0x03, 0xcf, 0xca, 0xc0, 0x1f, 0xc6, 0x03, 0x8f,
	0x2f, 0xc7, 0xb6, 0x35, 0xed, 0x32, 0x8f, 0x3a, 0x03, 0x6e, 0x9b, 0x7d, 0xb1, 0xf7, 0x8c, 0xfa,
	0x2c, 0xca, 0x6a, 0xef, 0xfa, 0x15, 0xf4, 0x76, 0xa4, 0xd6, 0x3e, 0x02, 0x90, 0xa3, 0xf2, 0xe1,
	0xf8, 0xb9, 0x44, 0x9e, 0x91, 0xa8, 0x4a, 0xfd, 0x82, 0xa1, 0x0b, 0xa0, 0x65, 0xfb, 0xb5, 0x7f,
	0x4c, 0xc1, 0x56, 0x92, 0x93, 0xf8, 0x00, 0xf2, 0x23, 0x72, 0x35, 0xd7, 0x29, 0xee, 0xfd, 0xe2,
	0xc6, 0xc0, 0x38, 0x8f, 0xad, 0x60, 0xd5, 0xe4, 0x46, 0xa2, 0x51, 0xfd, 0x0e, 0x8a, 0x11, 0x38,
	0x21, 0xc6, 0x4f, 0xe2, 0x31, 0xc6, 0x4f, 0x6f, 0x49, 0xa4, 0xd5, 0xde, 0x83, 0x42, 0xe8, 0x27,
	0x82, 0x74, 0xe0, 0x63, 0xd6, 0xe0, 0x9f, 0x35, 0x0a, 0xfa, 0x7c, 0xd5, 0x7f, 0x0c, 0x1b, 0x7c,
	0x11, 0x92, 0x33, 0xea, 0x10, 0xdb, 0x1c, 0x91, 0xab, 0x50, 0x16, 0x85, 0x1d, 0x47, 0x02, 0xc7,
	0x9f, 0xc1, 0xd6, 0x80, 0x99, 0xcb, 0xf2, 0x9a, 0x90, 0xc7, 0x03, 0x76, 0xb2, 0xa0, 0x21, 0x8e,
	0x65, 0xf1, 0x69, 0xc0, 0xcf, 0xa0, 0x28, 0xd9, 0xe6, 0x15, 0x3b, 0xe0, 0xee, 0xe3, 0x6b, 0x26,
	0x2e, 0x6c, 0xce, 0x0f, 0xf8, 0x73, 0x80, 0x5b, 0xf3, 0x67, 0xa7, 0xa6, 0xd8, 0x70, 0x48, 0x90,
	0xbc, 0xd7, 0x5a, 0xeb, 0xce, 0x4e, 0x5b, 0x52, 0x5a, 0x59, 0xf3, 0xe7, 0x40, 0xf5, 0x39, 0xac,
	0x2f, 0x0c, 0xf6, 0x87, 0x98, 0x8f, 0xea, 0x6f, 0x61, 0x7d, 0x61, 0xd4, 0x04, 0xb3, 0xbf, 0xcf,
	0x32, 0xe1, 0x59, 0xaa, 0xb7, 0xa9, 0xc7, 0x0f, 0x55, 0xbc, 0x0a, 0x67, 0xf9, 0x99, 0x28, 0xe0,
	0x76, 0x67, 0xb1, 0x30, 0x0a, 0xa9, 0xba, 0xf8, 0x57, 0x55, 0x45, 0x21, 0x7e, 0xf3, 0x81, 0xb9,
	0x7a, 0x04, 0x10, 0xaa, 0x25, 0xc4, 0xf0, 0xf3, 0x78, 0x0c, 0xf1, 0x3d, 0x9f, 0x6b, 0x46, 0x7d,
	0xfe, 0x87, 0x2c, 0x64, 0x38, 0x86, 0x3f, 0x82, 0x8c, 0xb8, 0x9d, 0xa4, 0xc4, 0xce, 0xbb, 0xbd,
	0xa4, 0x24, 0xb6, 0x5b, 0x21, 0x82, 0x31, 0x64, 0xc4, 0x85, 0x4a, 0xba, 0x26, 0xbe, 0xa3, 0x27,
	0xc2, 0x74, 0xf4, 0x44, 0x88, 0xff, 0x28, 0x7a, 0xc5, 0xca, 0x8a, 0x9b, 0x44, 0xe4, 0x2a, 0xf5,
	0x09, 0x64, 0x27, 0xae, 0x4d, 0xc6, 0xe2, 0x2e, 0xb3, 0x38, 0x8d, 0x6d, 0xde, 0xc3, 0x2f, 0x76,
	0x86, 0x14, 0xc2, 0xef, 0x43, 0xd1, 0x23, 0x6c, 0xe6, 0x39, 0x66, 0xdf, 0xb5, 0x83, 0xdb, 0x0b,
	0x48, 0xa8, 0xe9, 0xda, 0x04, 0xbf, 0x07, 0xaa, 0x65, 0x4e, 0xfc, 0x41, 0xa5, 0x20, 0x1c, 0x29,
	0x48, 0xa4, 0xed, 0x0f, 0xf0, 0x43, 0x00, 0xc2, 0x43, 0x97, 0xb7, 0x17, 0x10, 0x43, 0xc6, 0x0f,
	0x86, 0xfb, 0xf3, 0x6e, 0x23, 0x22, 0x8a, 0x1f, 0x41, 0xc1, 0x21, 0x17, 0xe2, 0xfa, 0xe6, 0x57,
	0x8a, 0x62, 0x42, 0xdf, 0x5f, 0x62, 0xa8, 0xde, 0x21, 0x17, 0x9c, 0xa5, 0x60, 0x43, 0x76, 0x54,
	0x13, 0x7f, 0x08, 0xeb, 0x73, 0x6d, 0xd3, 0xb2, 0x6d, 0x62, 0x57, 0xd6, 0x76, 0x52, 0xf7, 0x74,
	0xa3, 0x14, 0x88, 0x34, 0x38, 0x88, 0x1f, 0x41, 0xd5, 0x27, 0x1e, 0xb5, 0xc6, 0xf4, 0x35, 0x51,
	0x09, 0x30, 0xb5, 0x3c, 0x6b, 0x42, 0x18, 0xf1, 0xfc, 0xca, 0x99, 0x88, 0xa6, 0x12, 0x4a, 0xf0,
	0x31, 0x4f, 0xe6, 0xfd, 0x0b, 0xda, 0xe4, 0x92, 0xf4, 0x67, 0xcc, 0xe5, 0x77, 0x7e, 0xe7, 0x8c,
	0x0e, 0x2a, 0x83, 0x45, 0xed, 0x7d, 0x25, 0xd0, 0x14, 0xfd, 0xfc, 0x04, 0xe8, 0x7b, 0x7d, 0xd3,
	0x23, 0xe7, 0x7e, 0x65, 0x28, 0x64, 0xf3, 0xbe, 0xd7, 0x37, 0xc8, 0xb9, 0x38, 0xec, 0xdb, 0x3e,
	0xe3, 0x5d, 0x15, 0x2a, 0xa7, 0xd6, 0xf6, 0x99, 0x41, 0xce, 0xf9, 0x55, 0x30, 0x18, 0xa6, 0xf2,
	0x3b, 0xd1, 0x33, 0x6f, 0x57, 0x7f, 0x05, 0xa5, 0x18, 0x1d, 0x37, 0x1d, 0xbc, 0xb2, 0xf1, 0xed,
	0x56, 0x6e, 0xb1, 0x79, 0xa4, 0x1f, 0x66, 0x74, 0x1b, 0x91, 0xc3, 0x8c, 0x4e, 0xd0, 0x59, 0xed,
	0x9f, 0x34, 0x28, 0xcc, 0x93, 0x82, 0x4f, 0xb6, 0x48, 0x0b, 0x73, 0x68, 0xf9, 0x43, 0x65, 0xb8,
	0x20, 0x90, 0xa7, 0x96, 0x3f, 0xc4, 0x5f, 0xc2, 0x9d, 0x09, 0xb1, 0x1c, 0xd3, 0x3a, 0x27, 0x1e,
	0x3f, 0x81, 0x4f, 0x3d, 0xd2, 0xa7, 0x7e, 0x78, 0x6d, 0xdd, 0xe2, 0xbd, 0x0d, 0xd9, 0x79, 0x12,
	0xf4, 0xe1, 0x0a, 0xe4, 0xfb, 0xae, 0xc3, 0xc8, 0x25, 0x53, 0x79, 0x1c, 0x34, 0xf9, 0x51, 0xc7,
	0x67, 0xd6, 0x80, 0xf8, 0x95, 0x8c, 0x48, 0x80, 0x5a, 0x72, 0xae, 0xd6, 0xbb, 0x42, 0x48, 0x6d,
	0x2f, 0x52, 0x83, 0x67, 0xc0, 0x29, 0xf1, 0x99, 0x29, 0x9a, 0xf2, 0x35, 0x22, 0x2b, 0xac, 0x97,
	0x38, 0x2c, 0x34, 0x3a, 0xd6, 0x84, 0x54, 0x0d, 0x28, 0x46, 0xd4, 0x13, 0x38, 0xfb, 0x45, 0x7c,
	0x6d, 0xdf, 0x5d, 0xf6, 0x41, 0xe8, 0x47, 0x57, 0xf8, 0x8f, 0x00, 0x61, 0x07, 0x27, 0x2d, 0xe2,
	0x84, 0x22, 0xcd, 0x0f, 0x1c, 0xe0, 0x73, 0x72, 0x46, 0xc7, 0xaa, 0x86, 0x17, 0x0c, 0xd9, 0x88,
	0xaf, 0xe1, 0xf4, 0xe2, 0x1a, 0x46, 0x90, 0x9e, 0x34, 0x4e, 0xc4, 0xb1, 0x57, 0x33, 0xf8, 0x67,
	0xed, 0xaf, 0x35, 0x80, 0x70, 0x25, 0xe1, 0x2f, 0x20, 0xa7, 0xb2, 0x30, 0x95, 0x70, 0x40, 0x50,
	0x82, 0x44, 0x26, 0xa2, 0xa1, 0x44, 0xf1, 0x6f, 0x61, 0x33, 0x78, 0xbd, 0x09, 0x17, 0x62, 0xb0,
	0xb7, 0x7c, 0xba, 0x62, 0xd1, 0xd6, 0x9f, 0x48, 0x95, 0x10, 0x51, 0x13, 0x81, 0xed, 0xa5, 0x8e,
	0xea, 0x08, 0xee, 0xae, 0x10, 0x4f, 0x20, 0xfe, 0xeb, 0x38, 0xf1, 0x49, 0x57, 0xc0, 0x25, 0x63,
	0xd1, 0x59, 0xf8, 0x9f, 0x14, 0x94, 0xe3, 0x91, 0xe2, 0x1a, 0x94, 0x06, 0xcc, 0x0c, 0x82, 0xa4,
	0x76, 0xf0, 0x40, 0x35, 0x60, 0xca, 0x52, 0xcb, 0xc6, 0xf7, 0x40, 0x1c, 0x00, 0x22, 0x52, 0xc1,
	0xd4, 0x94, 0x39, 0x3e, 0x17, 0xf4, 0xc5, 0x15, 0xce, 0x75, 0xce, 0x4c, 0x36, 0xf4, 0xc4, 0x14,
	0x69, 0x22, 0x73, 0xcf, 0x7a, 0x43, 0x0f, 0xef, 0xc2, 0x06, 0x75, 0x67, 0xbc, 0xc7, 0x37, 0xa9,
	0xc3, 0x88, 0x77, 0x6e, 0x8d, 0xc5, 0x74, 0x15, 0x8c, 0x75, 0xea, 0xce, 0x7a, 0x43, 0xcf, 0x6f,
	0x29, 0x98, 0x3b, 0xe5, 0x10, 0x62, 0x9b, 0x53, 0xcf, 0xec, 0xcf, 0xbc, 0x73, 0x99, 0xa7, 0xba,
	0x51, 0xe4, 0xe0, 0x89, 0xd7, 0xe4, 0x10, 0x2f, 0x08, 0x42, 0xa6, 0x3f, 0x12, 0xf7, 0x0b, 0xdd,
	0xc8, 0xf1, 0x66, 0x73, 0xa4, 0x8e, 0xc3, 0x7f, 0x97, 0x86, 0xbb, 0x2b, 0x18, 0x89, 0x79, 0x99,
	0x8a, 0x7b, 0xb9, 0x44, 0x87, 0xb6, 0x4c, 0xc7, 0x87, 0xb0, 0xbe, 0x40, 0x87, 0x5a, 0xa5, 0xa5,
	0x18, 0x1b, 0xd8, 0x02, 0x1e, 0x58, 0x2c, 0x71, 0x32, 0x2b, 0x1f, 0x41, 0x96, 0xbc, 0xac, 0xb7,
	0xdc, 0xd9, 0x52, 0x06, 0x95, 0x69, 0x0c, 0xc4, 0x3f, 0xc0, 0x5d, 0x3e, 0x84, 0xaa, 0x2e, 0x76,
	0x64, 0x2c, 0x41, 0xd9, 0xe2, 0x8e, 0xaf, 0x5e, 0x09, 0xa2, 0x36, 0x8c, 0x6d, 0xea, 0xce, 0x54,
	0x01, 0xb2, 0x43, 0xb8, 0xda, 0x87, 0xcd, 0x04, 0x07, 0x12, 0x72, 0xf2, 0x41, 0x3c, 0x27, 0x6f,
	0x1e, 0x30, 0x92, 0x8f, 0xff, 0x97, 0x86, 0xcd, 0x04, 0x11, 0xfc, 0x0a, 0xca, 0x7d, 0x1a, 0x23,
	0x4e, 0x9e, 0x5f, 0xbe, 0xb8, 0xc9, 0x78, 0xbd, 0x49, 0x97, 0x38, 0x2b, 0xf5, 0xa3, 0x18, 0x7e,
	0x05, 0x77, 0xfa, 0x34, 0x91, 0xb1, 0xd5, 0x8b, 0x2a, 0xd4, 0xdf, 0x1f, 0x93, 0x09, 0x71, 0x98,
	0xb1, 0xd5, 0xa7, 0xcb, 0xa4, 0x09, 0xbf, 0x47, 0x31, 0xbf, 0xd3, 0x6f, 0xea, 0xf7, 0x28, 0xc1,
	0xef, 0x28, 0x56, 0x3d, 0x03, 0xbc, 0x1c, 0x5c, 0xc2, 0x1d, 0xeb, 0x0d, 0x6a, 0xc4, 0x72, 0x38,
	0x91, 0x13, 0x2a, 0x05, 0xbc, 0xec, 0x4c, 0xc2, 0xbc, 0x7f, 0x13, 0x1f, 0xe7, 0xe7, 0x09, 0xe3,
	0x34, 0x47, 0x3d, 0x97, 0x59, 0xe3, 0xee, 0xec, 0x34, 0x79, 0xfa, 0xff, 0x26, 0x15, 0xac, 0xd1,
	0x25, 0x8f, 0x70, 0x19, 0x34, 0x6b, 0xaa, 0x56, 0xa7, 0x66, 0x4d, 0x45, 0xdb, 0x53, 0x9b, 0xa6,
	0x66, 0x79, 0xbc, 0xcd, 0xa6, 0xea, 0xcd, 0x43, 0x63, 0xa2, 0xff, 0x6c, 0xaa, 0x5e, 0x3d, 0xb4,
	0x33, 0xd9, 0x76, 0xd4, 0x9b, 0xb5, 0x76, 0xe6, 0xe0, 0x3d, 0xd0, 0xe7, 0xd5, 0x24, 0x97, 0xf0,
	0x18, 0x77, 0x30, 0x76, 0x2d, 0x76, 0xe2, 0x52, 0x87, 0x19, 0xf9, 0xa9, 0x2c, 0x31, 0xb5, 0xff,
	0x4d, 0x41, 0x75, 0x75, 0x24, 0x9c, 0x69, 0xc6, 0x51, 0xb5, 0xa1, 0xbc, 0x21, 0xd3, 0x42, 0x05,
	0x3f, 0x86, 0xb4, 0x3f, 0x3b, 0x55, 0x1b, 0xc9, 0x67, 0x6f, 0xc8, 0x1d, 0xbf, 0xb0, 0xa8, 0x6b,
	0xba, 0x3f, 0x3b, 0xad, 0xfe, 0x06, 0xf4, 0x00, 0x78, 0xbb, 0xbd, 0xe2, 0xba, 0x3c, 0xa8, 0x3d,
	0x00, 0x08, 0x39, 0x09, 0x5f, 0x9f, 0xb4, 0xd8, 0xeb, 0x93, 0xa6, 0x5e, 0x9f, 0x5e, 0xab, 0x6a,
	0x9f, 0x7a, 0x5d, 0xfb, 0xd7, 0x22, 0x40, 0x9b, 0xf2, 0x13, 0x9d, 0x38, 0xb0, 0xbc, 0x07, 0x20,
	0x9e, 0x19, 0x7d, 0xb3, 0xef, 0x30, 0x95, 0xa7, 0xf2, 0x7d, 0xdb, 0x6f, 0x3a, 0x0c, 0xd7, 0x61,
	0xd3, 0x21, 0x03, 0x8b, 0xd1, 0x73, 0x62, 0x46, 0xe4, 0xe4, 0x61, 0x6c, 0x23, 0xe8, 0x6a, 0xcd,
	0xe5, 0xbf, 0x81, 0x77, 0xa7, 0x9e, 0xfb, 0x3b, 0xd2, 0x67, 0x66, 0x92, 0x9e, 0xcc, 0x87, 0x8a,
	0x12, 0xe9, 0x2c, 0xa9, 0xdb, 0xb0, 0xbd, 0x74, 0x67, 0x15, 0x8a, 0x99, 0x84, 0x89, 0x08, 0xa3,
	0xa8, 0x2f, 0xde, 0x66, 0x9b, 0x0e, 0x93, 0x13, 0xb1, 0x39, 0x5d, 0xee, 0xc1, 0xaf, 0xe1, 0xbd,
	0xc0, 0xc9, 0xe4, 0xd1, 0xe4, 0xab, 0xfe, 0xc3, 0xd5, 0xa3, 0x09, 0xe5, 0x95, 0x83, 0x56, 0xa7,
	0x2b, 0x05, 0xf0, 0x23, 0xc8, 0xf7, 0x47, 0x72, 0x94, 0x5c, 0xf2, 0x63, 0x58, 0x30, 0x4a, 0x73,
	0x14, 0x5a, 0xcc, 0xf5, 0x45, 0x03, 0xff, 0x19, 0x60, 0x79, 0x23, 0x57, 0x4f, 0xaa, 0xe6, 0x90,
	0xfa, 0xac, 0xa2, 0x27, 0x3d, 0x6a, 0x84, 0x86, 0xc4, 0x3d, 0x59, 0x3d, 0xb8, 0x3e, 0xa5, 0xbe,
	0x32, 0x89, 0xac, 0x05, 0x18, 0x1b, 0xb0, 0xae, 0xae, 0xfb, 0x1e, 0xb1, 0xa4, 0x65, 0xf9, 0x5e,
	0xb7, 0x7b, 0xad, 0xe5, 0x86, 0x47, 0xac, 0xd0, 0x6c, 0xc9, 0x8a, 0x62, 0xf8, 0x39, 0xc8, 0x71,
	0xcc, 0xd3, 0x2b, 0x46, 0x7c, 0x69, 0x14, 0x12, 0x6e, 0xfe, 0x8b, 0x46, 0x1f, 0x73, 0xf1, 0xd0,
	0x6a, 0xd9, 0x8a, 0x81, 0xf8, 0x37, 0xb0, 0x29, 0xcd, 0x0e, 0x2f, 0x4c, 0xf1, 0xb3, 0x92, 0xb4,
	0xbc, 0xf6, 0x06, 0x44, 0x3c, 0xbd, 0x30, 0xb8, 0xc2, 0x22, 0x11, 0x11, 0x18, 0x7f, 0x02, 0x58,
	0x54, 0x01, 0x53, 0x8e, 0x31, 0x11, 0xbe, 0x57, 0x8a, 0x22, 0x77, 0x91, 0xe8, 0x11, 0x96, 0xda,
	0x02, 0xc7, 0xf7, 0xe5, 0x6f, 0x4a, 0xfc, 0xd8, 0xce, 0xfc, 0x8a, 0x9d, 0x70, 0x45, 0x6d, 0x38,
	0x8e, 0xdb, 0xe5, 0xbd, 0x46, 0x81, 0x4b, 0x8a, 0x4f, 0xfc, 0x39, 0xe8, 0x03, 0xa6, 0x94, 0xc8,
	0xb5, 0x4a, 0xf9, 0x01, 0x13, 0x1f, 0xd5, 0x03, 0xa8, 0xac, 0xca, 0xb9, 0x84, 0x8d, 0x66, 0xe5,
	0xcd, 0xa9, 0xda, 0x86, 0xf7, 0x6f, 0x48, 0xe1, 0x5b, 0x99, 0x7b, 0x01, 0xc5, 0x48, 0xae, 0xbe,
	0xdd, 0xcf, 0x58, 0x6d, 0x6b, 0xda, 0x74, 0x67, 0xf1, 0x9d, 0xae, 0x09, 0xdb, 0x89, 0xa9, 0x7b,
	0x9b, 0x5b, 0x62, 0xf5, 0xd7, 0x80, 0x97, 0xb3, 0xf4, 0x56, 0xe1, 0x35, 0x60, 0x33, 0x21, 0x25,
	0x6f, 0xe5, 0x44, 0x10, 0xc9, 0x62, 0xee, 0xdd, 0xf2, 0xbe, 0x9b, 0x47, 0x7a, 0xed, 0x6f, 0xe7,
	0x3f, 0x3b, 0x05, 0x94, 0x71, 0x23, 0x61, 0xed, 0xe6, 0x9f, 0xf8, 0xd7, 0x90, 0xf7, 0x67, 0xa7,
	0xaa, 0x52, 0xa7, 0x57, 0xec, 0xfe, 0x81, 0x3e, 0xdf, 0xb5, 0xc2, 0x42, 0xe3, 0x8b, 0x46, 0xf5,
	0x2b, 0x28, 0x46, 0xe0, 0xdb, 0xf8, 0x59, 0xfb, 0x8f, 0x1c, 0x14, 0xe6, 0xc9, 0x8b, 0xdf, 0x85,
	0x82, 0x5c, 0x4b, 0xa1, 0x8b, 0xba, 0x00, 0x78, 0x39, 0xfb, 0x04, 0xf0, 0xd4, 0xf5, 0xa9, 0xd8,
	0x25, 0xe4, 0x5a, 0x0b, 0x37, 0x17, 0x14, 0xf4, 0x08, 0xe6, 0x94, 0xf4, 0x7c, 0x4f, 0x09, 0xa5,
	0xe5, 0x96, 0x82, 0x82, 0x9e, 0xb9, 0xf4, 0x21, 0xac, 0xc5, 0x8a, 0x64, 0x26, 0x81, 0x88, 0xb9,
	0x9b, 0xf5, 0xa5, 0xf2, 0x58, 0xfc, 0x31, 0x52, 0x19, 0x1b, 0x50, 0x08, 0x6b, 0x62, 0x36, 0xe1,
	0xb9, 0x3e, 0x34, 0x14, 0xaf, 0x86, 0xba, 0x15, 0x14, 0xc2, 0xef, 0x60, 0x5d, 0x98, 0x88, 0x54,
	0xab, 0x5c, 0xc2, 0x6f, 0xc7, 0x71, 0x43, 0x0b, 0x95, 0xaa, 0x64, 0x45, 0x31, 0xfc, 0x2d, 0xe8,
	0xcc, 0x1a, 0xc8, 0xbd, 0x24, 0x9f, 0xb0, 0x97, 0x84, 0xb6, 0x7a, 0xd6, 0x20, 0xdc, 0x4b, 0xf2,
	0x4c, 0xb6, 0xf0, 0x11, 0x94, 0x82, 0xdf, 0xf3, 0xa4, 0x11, 0xfd, 0x5a, 0x8a, 0x9a, 0xf2, 0xb7,
	0xbe, 0xd0, 0x50, 0xb1, 0x1f, 0x22, 0xd5, 0x6f, 0x01, 0xfd, 0x5e, 0xeb, 0xf4, 0x57, 0x50, 0x7a,
	0xfb, 0x25, 0xca, 0x17, 0xf9, 0x12, 0x5d, 0xb7, 0x1a, 0xfe, 0x7b, 0x58, 0x8b, 0x92, 0xf4, 0x87,
	0x2b, 0x62, 0xdf, 0x02, 0x5a, 0x24, 0xee, 0x36, 0xa1, 0xed, 0xbe, 0x82, 0xbc, 0xfa, 0x4b, 0x11,
	0x8c, 0xa1, 0xac, 0x3e, 0x9f, 0x3b, 0x23, 0xc7, 0xbd, 0x70, 0xd0, 0x3b, 0x78, 0x13, 0xd6, 0x15,
	0xd6, 0xf3, 0x2c, 0xea, 0x50, 0x67, 0x80, 0x52, 0x78, 0x1b, 0x36, 0x14, 0xf8, 0xc2, 0x1a, 0x53,
	0x5b, 0x9c, 0x20, 0x91, 0x86, 0xd7, 0xa1, 0x18, 0xc8, 0x12, 0x9f, 0xa1, 0xf4, 0xee, 0x5f, 0x69,
	0x50, 0x68, 0x44, 0xfe, 0x90, 0x04, 0xcd, 0x1b, 0xe1, 0x00, 0x77, 0x54, 0xfd, 0xe4, 0xa8, 0x38,
	0xa7, 0x1d, 0x4e, 0x89, 0x1a, 0x23, 0x8e, 0x9f, 0x38, 0x03, 0xa4, 0xe1, 0x2a, 0xdc, 0x59, 0x80,
	0xe9, 0x25, 0x19, 0xb7, 0x2d, 0x86, 0xd2, 0xf8, 0x27, 0xaa, 0x0a, 0xce, 0xfb, 0x5e, 0xce, 0xce,
	0xbf, 0xdc, 0xfb, 0x6c, 0x8a, 0x32, 0xcb, 0x6a, 0xb2, 0xcb, 0x9f, 0xa2, 0xec, 0x0a, 0xb5, 0xbd,
	0x29, 0xca, 0xad, 0x50, 0xdb, 0xf3, 0xa7, 0x28, 0xbf, 0xec, 0xe0, 0xe3, 0xc9, 0x14, 0xe9, 0x31,
	0xf8, 0x05, 0xb5, 0x89, 0xdb, 0x9e, 0x7e, 0x89, 0xc8, 0xee, 0x7f, 0x6a, 0xa0, 0x07, 0x0f, 0xd8,
	0x82, 0x54, 0xf5, 0x1d, 0x12, 0xb1, 0x05, 0x28, 0x00, 0x23, 0x54, 0xf3, 0x39, 0x51, 0x68, 0x5b,
	0x62, 0x1a, 0xde, 0x80, 0x52, 0x80, 0x3d, 0xb3, 0x4e, 0xc9, 0x18, 0xa5, 0xa3, 0x62, 0x07, 0x74,
	0xcc, 0x88, 0x87, 0x32, 0x9c, 0xd9, 0x00, 0x6b, 0x4d, 0xa6, 0xae, 0x27, 0x5e, 0x30, 0x50, 0x36,
	0x8a, 0xef, 0x5f, 0xce, 0xf1, 0x5c, 0xd4, 0x81, 0xa6, 0x3b, 0xbd, 0x12, 0x68, 0x3e, 0x3a, 0x58,
	0x9b, 0x78, 0x03, 0x82, 0xf4, 0x28, 0xd4, 0x72, 0xce, 0x88, 0x87, 0x0a, 0x51, 0xdd, 0xae, 0x35,
	0x99, 0x8e, 0xb9, 0xa3, 0x10, 0xf3, 0x4a, 0xfc, 0x66, 0x8e, 0x8a, 0x18, 0xf1, 0x85, 0x10, 0x28,
	0x53, 0x86, 0xd6, 0xf0, 0x5d, 0xd8, 0x8c, 0xfb, 0x29, 0x1e, 0x0a, 0x51, 0x29, 0x6a, 0x34, 0x78,
	0xb4, 0x42, 0xa8, 0x96, 0xd1, 0xcb, 0xa8, 0x5c, 0xcb, 0xe8, 0xeb, 0x68, 0x7d, 0xf7, 0x2f, 0x53,
	0x50, 0xe0, 0x22, 0xbc, 0x80, 0x90, 0x40, 0x5e, 0x34, 0x96, 0x78, 0x15, 0xe8, 0x09, 0x71, 0x6c,
	0xc9, 0x6b, 0x14, 0x35, 0x66, 0x4e, 0x9c, 0x59, 0x81, 0x3e, 0x71, 0x1d, 0x12, 0x32, 0x2b, 0xa0,
	0x7d, 0xcf, 0x73, 0x39, 0xb3, 0x51, 0xb1, 0x36, 0xf5, 0x7d, 0x94, 0xdd, 0x7d, 0x06, 0x7a, 0x77,
	0x68, 0x7d, 0x2e, 0xa6, 0x77, 0x1b, 0x36, 0xba, 0x4f, 0x1b, 0x9f, 0x9b, 0xbd, 0x97, 0x27, 0xfb,
	0xe6, 0xf3, 0xce, 0x51, 0xe7, 0xf8, 0xfb, 0x8e, 0x5c, 0x4a, 0x21, 0xdc, 0xe8, 0x76, 0xf7, 0x7b,
	0xd2, 0x8f, 0x10, 0x6c, 0x1e, 0xb7, 0xdb, 0xad, 0x1e, 0xd2, 0x76, 0xcf, 0xc4, 0x15, 0xaa, 0xcb,
	0x5c, 0xcf, 0x1a, 0x10, 0x3e, 0x5c, 0xbb, 0x65, 0x98, 0xed, 0xfd, 0x5e, 0xe3, 0x49, 0xa3, 0xd7,
	0xe8, 0x4a, 0x5b, 0x1c, 0x6a, 0x74, 0x3a, 0xc7, 0xbd, 0x46, 0xaf, 0x75, 0xdc, 0xe9, 0xa2, 0x14,
	0xa7, 0x96, 0x83, 0x47, 0xfb, 0x2f, 0xbf, 0x3f, 0x36, 0x9e, 0x74, 0x91, 0x86, 0x4b, 0x50, 0xe0,
	0x48, 0xaf, 0xd1, 0x3d, 0xea, 0xa2, 0x34, 0x5f, 0xa0, 0xbc, 0xd9, 0x3c, 0xee, 0xf4, 0xf6, 0x7f,
	0xe8, 0xa1, 0xcc, 0xee, 0x23, 0x28, 0x8a, 0x0c, 0x3a, 0x70, 0xbd, 0x89, 0xc5, 0xf8, 0x40, 0x9d,
	0xe3, 0x88, 0x51, 0xf4, 0x0e, 0x2e, 0x03, 0x9c, 0x34, 0xba, 0xcd, 0xc6, 0x33, 0xf3, 0xc5, 0x71,
	0x13, 0xa5, 0x30, 0x40, 0xae, 0x75, 0x60, 0x36, 0x8c, 0x23, 0xa4, 0xed, 0xda, 0xb0, 0x99, 0xf0,
	0xd7, 0x10, 0x5c, 0xa4, 0xe3, 0xb2, 0x2e, 0x61, 0xe8, 0x1d, 0x9c, 0x03, 0xad, 0x77, 0x82, 0x52,
	0xfc, 0xff, 0x83, 0x13, 0xa4, 0x89, 0xff, 0x3b, 0x28, 0x2d, 0xf0, 0x0e, 0xca, 0xe0, 0x22, 0xe4,
	0x83, 0x99, 0xca, 0xe2, 0x3c, 0xa4, 0xdb, 0xbd, 0x13, 0x54, 0xe4, 0x68, 0xeb, 0x4f, 0x3b, 0xc7,
	0xc6, 0xfe, 0x13, 0xb4, 0xf6, 0xb8, 0xf0, 0x2a, 0xff, 0xa9, 0xf8, 0x53, 0x41, 0xff, 0x34, 0x27,
	0xfe, 0xff, 0xe2, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x55, 0xd6, 0xdd, 0xd4, 0x47, 0x28, 0x00,
	0x00,
}
