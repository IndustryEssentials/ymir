# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from src.swagger_models.base_model_ import Model
from src import util


class ModelResultResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, model_id: str=None, model_m_ap: int=None, task_parameters: str=None, executor_config: str=None):  # noqa: E501
        """ModelResultResult - a model defined in Swagger

        :param model_id: The model_id of this ModelResultResult.  # noqa: E501
        :type model_id: str
        :param model_m_ap: The model_m_ap of this ModelResultResult.  # noqa: E501
        :type model_m_ap: int
        :param task_parameters: The task_parameters of this ModelResultResult.  # noqa: E501
        :type task_parameters: str
        :param executor_config: The executor_config of this ModelResultResult.  # noqa: E501
        :type executor_config: str
        """
        self.swagger_types = {
            'model_id': str,
            'model_m_ap': int,
            'task_parameters': str,
            'executor_config': str
        }

        self.attribute_map = {
            'model_id': 'model_id',
            'model_m_ap': 'model_mAP',
            'task_parameters': 'task_parameters',
            'executor_config': 'executor_config'
        }
        self._model_id = model_id
        self._model_m_ap = model_m_ap
        self._task_parameters = task_parameters
        self._executor_config = executor_config

    @classmethod
    def from_dict(cls, dikt) -> 'ModelResultResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelResult_result of this ModelResultResult.  # noqa: E501
        :rtype: ModelResultResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_id(self) -> str:
        """Gets the model_id of this ModelResultResult.


        :return: The model_id of this ModelResultResult.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id: str):
        """Sets the model_id of this ModelResultResult.


        :param model_id: The model_id of this ModelResultResult.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def model_m_ap(self) -> int:
        """Gets the model_m_ap of this ModelResultResult.

        mean average precision of the model  # noqa: E501

        :return: The model_m_ap of this ModelResultResult.
        :rtype: int
        """
        return self._model_m_ap

    @model_m_ap.setter
    def model_m_ap(self, model_m_ap: int):
        """Sets the model_m_ap of this ModelResultResult.

        mean average precision of the model  # noqa: E501

        :param model_m_ap: The model_m_ap of this ModelResultResult.
        :type model_m_ap: int
        """

        self._model_m_ap = model_m_ap

    @property
    def task_parameters(self) -> str:
        """Gets the task_parameters of this ModelResultResult.


        :return: The task_parameters of this ModelResultResult.
        :rtype: str
        """
        return self._task_parameters

    @task_parameters.setter
    def task_parameters(self, task_parameters: str):
        """Sets the task_parameters of this ModelResultResult.


        :param task_parameters: The task_parameters of this ModelResultResult.
        :type task_parameters: str
        """

        self._task_parameters = task_parameters

    @property
    def executor_config(self) -> str:
        """Gets the executor_config of this ModelResultResult.


        :return: The executor_config of this ModelResultResult.
        :rtype: str
        """
        return self._executor_config

    @executor_config.setter
    def executor_config(self, executor_config: str):
        """Sets the executor_config of this ModelResultResult.


        :param executor_config: The executor_config of this ModelResultResult.
        :type executor_config: str
        """

        self._executor_config = executor_config
