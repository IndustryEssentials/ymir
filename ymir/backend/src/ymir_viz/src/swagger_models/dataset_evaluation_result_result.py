# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from src.swagger_models.base_model_ import Model
from src.swagger_models.dataset_evaluation import DatasetEvaluation  # noqa: F401,E501
from src import util


class DatasetEvaluationResultResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, conf_thr: float=None, iou_evaluations: Dict[str, DatasetEvaluation]=None, iou_averaged_evaluation: DatasetEvaluation=None):  # noqa: E501
        """DatasetEvaluationResultResult - a model defined in Swagger

        :param conf_thr: The conf_thr of this DatasetEvaluationResultResult.  # noqa: E501
        :type conf_thr: float
        :param iou_evaluations: The iou_evaluations of this DatasetEvaluationResultResult.  # noqa: E501
        :type iou_evaluations: Dict[str, DatasetEvaluation]
        :param iou_averaged_evaluation: The iou_averaged_evaluation of this DatasetEvaluationResultResult.  # noqa: E501
        :type iou_averaged_evaluation: DatasetEvaluation
        """
        self.swagger_types = {
            'conf_thr': float,
            'iou_evaluations': Dict[str, DatasetEvaluation],
            'iou_averaged_evaluation': DatasetEvaluation
        }

        self.attribute_map = {
            'conf_thr': 'conf_thr',
            'iou_evaluations': 'iou_evaluations',
            'iou_averaged_evaluation': 'iou_averaged_evaluation'
        }
        self._conf_thr = conf_thr
        self._iou_evaluations = iou_evaluations
        self._iou_averaged_evaluation = iou_averaged_evaluation

    @classmethod
    def from_dict(cls, dikt) -> 'DatasetEvaluationResultResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DatasetEvaluationResult_result of this DatasetEvaluationResultResult.  # noqa: E501
        :rtype: DatasetEvaluationResultResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conf_thr(self) -> float:
        """Gets the conf_thr of this DatasetEvaluationResultResult.


        :return: The conf_thr of this DatasetEvaluationResultResult.
        :rtype: float
        """
        return self._conf_thr

    @conf_thr.setter
    def conf_thr(self, conf_thr: float):
        """Sets the conf_thr of this DatasetEvaluationResultResult.


        :param conf_thr: The conf_thr of this DatasetEvaluationResultResult.
        :type conf_thr: float
        """

        self._conf_thr = conf_thr

    @property
    def iou_evaluations(self) -> Dict[str, DatasetEvaluation]:
        """Gets the iou_evaluations of this DatasetEvaluationResultResult.


        :return: The iou_evaluations of this DatasetEvaluationResultResult.
        :rtype: Dict[str, DatasetEvaluation]
        """
        return self._iou_evaluations

    @iou_evaluations.setter
    def iou_evaluations(self, iou_evaluations: Dict[str, DatasetEvaluation]):
        """Sets the iou_evaluations of this DatasetEvaluationResultResult.


        :param iou_evaluations: The iou_evaluations of this DatasetEvaluationResultResult.
        :type iou_evaluations: Dict[str, DatasetEvaluation]
        """

        self._iou_evaluations = iou_evaluations

    @property
    def iou_averaged_evaluation(self) -> DatasetEvaluation:
        """Gets the iou_averaged_evaluation of this DatasetEvaluationResultResult.


        :return: The iou_averaged_evaluation of this DatasetEvaluationResultResult.
        :rtype: DatasetEvaluation
        """
        return self._iou_averaged_evaluation

    @iou_averaged_evaluation.setter
    def iou_averaged_evaluation(self, iou_averaged_evaluation: DatasetEvaluation):
        """Sets the iou_averaged_evaluation of this DatasetEvaluationResultResult.


        :param iou_averaged_evaluation: The iou_averaged_evaluation of this DatasetEvaluationResultResult.
        :type iou_averaged_evaluation: DatasetEvaluation
        """

        self._iou_averaged_evaluation = iou_averaged_evaluation
