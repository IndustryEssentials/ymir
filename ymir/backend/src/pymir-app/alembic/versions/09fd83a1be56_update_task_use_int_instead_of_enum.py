"""update task: use int instead of enum

Revision ID: 09fd83a1be56
Revises: 64baca4a2ebe
Create Date: 2021-12-28 12:20:58.460195

"""
from enum import IntEnum

import sqlalchemy as sa

from alembic import context, op

# revision identifiers, used by Alembic.
revision = "09fd83a1be56"
down_revision = "64baca4a2ebe"
branch_labels = None
depends_on = None


class TypeEnum(IntEnum):
    unknown = 0
    training = 1
    mining = 2
    label = 3
    filter = 4
    import_data = 4
    export_data = 6
    copy_data = 7
    merge = 8


class StateEnum(IntEnum):
    unknown = 0
    pending = 1
    running = 2
    done = 3
    error = 4


type_enum = sa.Enum(TypeEnum)
state_enum = sa.Enum(StateEnum)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if context.get_x_argument(as_dictionary=True).get("sqlite", None):
        with op.batch_alter_table("task") as batch_op:
            batch_op.alter_column(
                "type",
                existing_type=type_enum,
                type_=sa.Integer(),
                existing_nullable=True,
            )
            batch_op.alter_column(
                "state",
                existing_type=state_enum,
                type_=sa.Integer(),
                existing_nullable=True,
            )
            batch_op.add_column(sa.Column("duration", sa.BigInteger(), nullable=True))
    else:
        op.alter_column(
            "task",
            "type",
            existing_type=type_enum,
            type_=sa.Integer(),
            existing_nullable=True,
        )
        op.alter_column(
            "task",
            "state",
            existing_type=state_enum,
            type_=sa.Integer(),
            existing_nullable=True,
        )
        op.add_column("task", sa.Column("duration", sa.BigInteger(), nullable=True))
    op.execute("update task set state = state - 1")
    op.execute("update task set type = type - 1")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("update task set state = state + 1")
    op.execute("update task set type = type + 1")
    if context.get_x_argument(as_dictionary=True).get("sqlite", None):
        with op.batch_alter_table("task") as batch_op:
            batch_op.alter_column(
                "state",
                existing_type=sa.Integer(),
                type_=state_enum,
                existing_nullable=True,
            )
            batch_op.alter_column(
                "type",
                existing_type=sa.Integer(),
                type_=type_enum,
                existing_nullable=True,
            )
            batch_op.drop_column("duration")
    else:
        op.alter_column(
            "task",
            "state",
            existing_type=sa.Integer(),
            type_=state_enum,
            existing_nullable=True,
        )
        op.alter_column(
            "task",
            "type",
            existing_type=sa.Integer(),
            type_=type_enum,
            existing_nullable=True,
        )
        op.drop_column("task", "duration")
    # ### end Alembic commands ###
