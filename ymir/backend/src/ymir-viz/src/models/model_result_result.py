# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from src import util
from src.models.base_model_ import Model


class ModelResultResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, task_type: str = None, model_id: str = None, model_m_ap: int = None
    ):  # noqa: E501
        """ModelResultResult - a model defined in Swagger

        :param task_type: The task_type of this ModelResultResult.  # noqa: E501
        :type task_type: str
        :param model_id: The model_id of this ModelResultResult.  # noqa: E501
        :type model_id: str
        :param model_m_ap: The model_m_ap of this ModelResultResult.  # noqa: E501
        :type model_m_ap: int
        """
        self.swagger_types = {"task_type": str, "model_id": str, "model_m_ap": int}

        self.attribute_map = {
            "task_type": "task_type",
            "model_id": "model_id",
            "model_m_ap": "model_mAP",
        }
        self._task_type = task_type
        self._model_id = model_id
        self._model_m_ap = model_m_ap

    @classmethod
    def from_dict(cls, dikt) -> "ModelResultResult":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelResult_result of this ModelResultResult.  # noqa: E501
        :rtype: ModelResultResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_type(self) -> str:
        """Gets the task_type of this ModelResultResult.

        也可作为Enum  # noqa: E501

        :return: The task_type of this ModelResultResult.
        :rtype: str
        """
        return self._task_type

    @task_type.setter
    def task_type(self, task_type: str):
        """Sets the task_type of this ModelResultResult.

        也可作为Enum  # noqa: E501

        :param task_type: The task_type of this ModelResultResult.
        :type task_type: str
        """

        self._task_type = task_type

    @property
    def model_id(self) -> str:
        """Gets the model_id of this ModelResultResult.


        :return: The model_id of this ModelResultResult.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id: str):
        """Sets the model_id of this ModelResultResult.


        :param model_id: The model_id of this ModelResultResult.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def model_m_ap(self) -> int:
        """Gets the model_m_ap of this ModelResultResult.

        mean average precision of the model  # noqa: E501

        :return: The model_m_ap of this ModelResultResult.
        :rtype: int
        """
        return self._model_m_ap

    @model_m_ap.setter
    def model_m_ap(self, model_m_ap: int):
        """Sets the model_m_ap of this ModelResultResult.

        mean average precision of the model  # noqa: E501

        :param model_m_ap: The model_m_ap of this ModelResultResult.
        :type model_m_ap: int
        """

        self._model_m_ap = model_m_ap
