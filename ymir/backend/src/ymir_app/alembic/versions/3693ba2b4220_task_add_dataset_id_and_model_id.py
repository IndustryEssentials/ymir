"""[task] add dataset_id and model_id

Revision ID: 3693ba2b4220
Revises: 0a65ca497350
Create Date: 2022-06-15 15:15:38.320432

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "3693ba2b4220"
down_revision = "0a65ca497350"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("model_stage", schema=None) as batch_op:
        batch_op.alter_column("timestamp", existing_type=sa.FLOAT(), type_=sa.Integer(), nullable=False)

    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.add_column(sa.Column("dataset_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("model_stage_id", sa.Integer(), nullable=True))
        batch_op.create_index(batch_op.f("ix_task_dataset_id"), ["dataset_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_task_model_stage_id"), ["model_stage_id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_task_model_stage_id"))
        batch_op.drop_index(batch_op.f("ix_task_dataset_id"))
        batch_op.drop_column("model_stage_id")
        batch_op.drop_column("dataset_id")

    with op.batch_alter_table("model_stage", schema=None) as batch_op:
        batch_op.alter_column("timestamp", existing_type=sa.Integer(), type_=sa.FLOAT(), nullable=True)

    # ### end Alembic commands ###
