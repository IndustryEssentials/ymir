"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _TvtType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TvtTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TvtType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TvtTypeUnknown: TvtType.ValueType = ...  # 0
    TvtTypeTraining: TvtType.ValueType = ...  # 1
    TvtTypeValidation: TvtType.ValueType = ...  # 2
    TvtTypeTest: TvtType.ValueType = ...  # 3
class TvtType(_TvtType, metaclass=_TvtTypeEnumTypeWrapper):
    """/ assertion type: training, validation or test"""
    pass

TvtTypeUnknown: TvtType.ValueType = ...  # 0
TvtTypeTraining: TvtType.ValueType = ...  # 1
TvtTypeValidation: TvtType.ValueType = ...  # 2
TvtTypeTest: TvtType.ValueType = ...  # 3
global___TvtType = TvtType


class _AssetType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _AssetTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    AssetTypeUnknown: AssetType.ValueType = ...  # 0
    AssetTypeImageJpeg: AssetType.ValueType = ...  # 1
    AssetTypeImagePng: AssetType.ValueType = ...  # 2
    AssetTypeImagePixelMat: AssetType.ValueType = ...  # 3
    AssetTypeImageYuv420p: AssetType.ValueType = ...  # 4
    AssetTypeImageYuv420sp: AssetType.ValueType = ...  # 5
    AssetTypeImageYuv422p: AssetType.ValueType = ...  # 6
    AssetTypeImageYuv422sp: AssetType.ValueType = ...  # 7
    AssetTypeImageBmp: AssetType.ValueType = ...  # 8
    AssetTypeVideoMp4: AssetType.ValueType = ...  # 101
class AssetType(_AssetType, metaclass=_AssetTypeEnumTypeWrapper):
    pass

AssetTypeUnknown: AssetType.ValueType = ...  # 0
AssetTypeImageJpeg: AssetType.ValueType = ...  # 1
AssetTypeImagePng: AssetType.ValueType = ...  # 2
AssetTypeImagePixelMat: AssetType.ValueType = ...  # 3
AssetTypeImageYuv420p: AssetType.ValueType = ...  # 4
AssetTypeImageYuv420sp: AssetType.ValueType = ...  # 5
AssetTypeImageYuv422p: AssetType.ValueType = ...  # 6
AssetTypeImageYuv422sp: AssetType.ValueType = ...  # 7
AssetTypeImageBmp: AssetType.ValueType = ...  # 8
AssetTypeVideoMp4: AssetType.ValueType = ...  # 101
global___AssetType = AssetType


class _TaskType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TaskTypeUnknown: TaskType.ValueType = ...  # 0
    TaskTypeTraining: TaskType.ValueType = ...  # 1
    TaskTypeMining: TaskType.ValueType = ...  # 2
    TaskTypeLabel: TaskType.ValueType = ...  # 3
    TaskTypeFilter: TaskType.ValueType = ...  # 4
    TaskTypeImportData: TaskType.ValueType = ...  # 5
    TaskTypeExportData: TaskType.ValueType = ...  # 6
    TaskTypeCopyData: TaskType.ValueType = ...  # 7
    TaskTypeMerge: TaskType.ValueType = ...  # 8
class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper):
    """/ task type"""
    pass

TaskTypeUnknown: TaskType.ValueType = ...  # 0
TaskTypeTraining: TaskType.ValueType = ...  # 1
TaskTypeMining: TaskType.ValueType = ...  # 2
TaskTypeLabel: TaskType.ValueType = ...  # 3
TaskTypeFilter: TaskType.ValueType = ...  # 4
TaskTypeImportData: TaskType.ValueType = ...  # 5
TaskTypeExportData: TaskType.ValueType = ...  # 6
TaskTypeCopyData: TaskType.ValueType = ...  # 7
TaskTypeMerge: TaskType.ValueType = ...  # 8
global___TaskType = TaskType


class _TaskState:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TaskStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TaskStateUnknown: TaskState.ValueType = ...  # 0
    TaskStatePending: TaskState.ValueType = ...  # 1
    TaskStateRunning: TaskState.ValueType = ...  # 2
    TaskStateDone: TaskState.ValueType = ...  # 3
    TaskStateError: TaskState.ValueType = ...  # 4
    TaskStateMiss: TaskState.ValueType = ...  # 5
class TaskState(_TaskState, metaclass=_TaskStateEnumTypeWrapper):
    pass

TaskStateUnknown: TaskState.ValueType = ...  # 0
TaskStatePending: TaskState.ValueType = ...  # 1
TaskStateRunning: TaskState.ValueType = ...  # 2
TaskStateDone: TaskState.ValueType = ...  # 3
TaskStateError: TaskState.ValueType = ...  # 4
TaskStateMiss: TaskState.ValueType = ...  # 5
global___TaskState = TaskState


class _Sha1Type:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _Sha1TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Sha1Type.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SHA1_TYPE_UNKNOWN: Sha1Type.ValueType = ...  # 0
    SHA1_TYPE_ASSET: Sha1Type.ValueType = ...  # 1
    SHA1_TYPE_COMMIT: Sha1Type.ValueType = ...  # 2
class Sha1Type(_Sha1Type, metaclass=_Sha1TypeEnumTypeWrapper):
    pass

SHA1_TYPE_UNKNOWN: Sha1Type.ValueType = ...  # 0
SHA1_TYPE_ASSET: Sha1Type.ValueType = ...  # 1
SHA1_TYPE_COMMIT: Sha1Type.ValueType = ...  # 2
global___Sha1Type = Sha1Type


class _RCode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _RCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    RC_OK: RCode.ValueType = ...  # 0
    RC_ERROR_UNKNOWN: RCode.ValueType = ...  # 1
    RC_CMD_ERROR_UNKNOWN: RCode.ValueType = ...  # 100
    RC_CMD_CORRUPT_MIR_FILE: RCode.ValueType = ...  # 101
    RC_CMD_INVALID_MIR_FILE: RCode.ValueType = ...  # 102
    RC_CMD_INVALID_MIR_REPO: RCode.ValueType = ...  # 103
    RC_CMD_INVALID_ARGS: RCode.ValueType = ...  # 104
    RC_CMD_INVALID_BRANCH_OR_TAG: RCode.ValueType = ...  # 105
    RC_CMD_INVALID_COMMAND: RCode.ValueType = ...  # 106
    RC_CMD_MIR_FILE_NOT_FOUND: RCode.ValueType = ...  # 107
    RC_CMD_CONFLICTS_OCCURED: RCode.ValueType = ...  # 108
    RC_CMD_EMPTY_METADATAS: RCode.ValueType = ...  # 109
    RC_CMD_EMPTY_TRAIN_SET: RCode.ValueType = ...  # 110
    RC_CMD_EMPTY_VAL_SET: RCode.ValueType = ...  # 111
    RC_CMD_DIRTY_REPO: RCode.ValueType = ...  # 112
    RC_CMD_NOTHING_TO_MERGE: RCode.ValueType = ...  # 113
    RC_SERVICE_ERROR_UNKNOWN: RCode.ValueType = ...  # 1000
    RC_SERVICE_INVALID_REQ: RCode.ValueType = ...  # 1001
    RC_SERVICE_INVOKE_ERROR: RCode.ValueType = ...  # 1002
    RC_SERVICE_UNKOWN_RESPONSE: RCode.ValueType = ...  # 1003
    RC_SERVICE_TASK_INVOKER_ERROR: RCode.ValueType = ...  # 1004
    RC_SERVICE_INFO_INVOKER_ERROR: RCode.ValueType = ...  # 1005
    RC_RUNTIME_ERROR_UNKNOWN: RCode.ValueType = ...  # 2000
    RC_RUNTIME_UNKNOWN_TYPES: RCode.ValueType = ...  # 2001
    RC_RUNTIME_CONTAINER_ERROR: RCode.ValueType = ...  # 2003
class RCode(_RCode, metaclass=_RCodeEnumTypeWrapper):
    pass

RC_OK: RCode.ValueType = ...  # 0
RC_ERROR_UNKNOWN: RCode.ValueType = ...  # 1
RC_CMD_ERROR_UNKNOWN: RCode.ValueType = ...  # 100
RC_CMD_CORRUPT_MIR_FILE: RCode.ValueType = ...  # 101
RC_CMD_INVALID_MIR_FILE: RCode.ValueType = ...  # 102
RC_CMD_INVALID_MIR_REPO: RCode.ValueType = ...  # 103
RC_CMD_INVALID_ARGS: RCode.ValueType = ...  # 104
RC_CMD_INVALID_BRANCH_OR_TAG: RCode.ValueType = ...  # 105
RC_CMD_INVALID_COMMAND: RCode.ValueType = ...  # 106
RC_CMD_MIR_FILE_NOT_FOUND: RCode.ValueType = ...  # 107
RC_CMD_CONFLICTS_OCCURED: RCode.ValueType = ...  # 108
RC_CMD_EMPTY_METADATAS: RCode.ValueType = ...  # 109
RC_CMD_EMPTY_TRAIN_SET: RCode.ValueType = ...  # 110
RC_CMD_EMPTY_VAL_SET: RCode.ValueType = ...  # 111
RC_CMD_DIRTY_REPO: RCode.ValueType = ...  # 112
RC_CMD_NOTHING_TO_MERGE: RCode.ValueType = ...  # 113
RC_SERVICE_ERROR_UNKNOWN: RCode.ValueType = ...  # 1000
RC_SERVICE_INVALID_REQ: RCode.ValueType = ...  # 1001
RC_SERVICE_INVOKE_ERROR: RCode.ValueType = ...  # 1002
RC_SERVICE_UNKOWN_RESPONSE: RCode.ValueType = ...  # 1003
RC_SERVICE_TASK_INVOKER_ERROR: RCode.ValueType = ...  # 1004
RC_SERVICE_INFO_INVOKER_ERROR: RCode.ValueType = ...  # 1005
RC_RUNTIME_ERROR_UNKNOWN: RCode.ValueType = ...  # 2000
RC_RUNTIME_UNKNOWN_TYPES: RCode.ValueType = ...  # 2001
RC_RUNTIME_CONTAINER_ERROR: RCode.ValueType = ...  # 2003
global___RCode = RCode


class _MirStorage:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _MirStorageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MirStorage.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    MIR_METADATAS: MirStorage.ValueType = ...  # 0
    MIR_ANNOTATIONS: MirStorage.ValueType = ...  # 1
    MIR_KEYWORDS: MirStorage.ValueType = ...  # 2
    MIR_TASKS: MirStorage.ValueType = ...  # 3
class MirStorage(_MirStorage, metaclass=_MirStorageEnumTypeWrapper):
    pass

MIR_METADATAS: MirStorage.ValueType = ...  # 0
MIR_ANNOTATIONS: MirStorage.ValueType = ...  # 1
MIR_KEYWORDS: MirStorage.ValueType = ...  # 2
MIR_TASKS: MirStorage.ValueType = ...  # 3
global___MirStorage = MirStorage


class _LabelFormat:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _LabelFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LabelFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    NO_ANNOTATION: LabelFormat.ValueType = ...  # 0
    PASCAL_VOC: LabelFormat.ValueType = ...  # 1
    IF_ARK: LabelFormat.ValueType = ...  # 2
class LabelFormat(_LabelFormat, metaclass=_LabelFormatEnumTypeWrapper):
    pass

NO_ANNOTATION: LabelFormat.ValueType = ...  # 0
PASCAL_VOC: LabelFormat.ValueType = ...  # 1
IF_ARK: LabelFormat.ValueType = ...  # 2
global___LabelFormat = LabelFormat


class MirMetadatas(google.protobuf.message.Message):
    """/ ========== metadatas.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___MetadataAttributes: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___MetadataAttributes] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ATTRIBUTES_FIELD_NUMBER: builtins.int
    @property
    def attributes(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MetadataAttributes]:
        """/ key: asset hash, value: attributes"""
        pass
    def __init__(self,
        *,
        attributes : typing.Optional[typing.Mapping[typing.Text, global___MetadataAttributes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributes",b"attributes"]) -> None: ...
global___MirMetadatas = MirMetadatas

class MetadataAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATASET_NAME_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    TVT_TYPE_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    IMAGE_CHANNELS_FIELD_NUMBER: builtins.int
    dataset_name: typing.Text = ...
    @property
    def timestamp(self) -> global___Timestamp: ...
    tvt_type: global___TvtType.ValueType = ...
    asset_type: global___AssetType.ValueType = ...
    width: builtins.int = ...
    """/ column number"""

    height: builtins.int = ...
    """/ row number"""

    image_channels: builtins.int = ...
    """/ (for images) channel count"""

    def __init__(self,
        *,
        dataset_name : typing.Text = ...,
        timestamp : typing.Optional[global___Timestamp] = ...,
        tvt_type : global___TvtType.ValueType = ...,
        asset_type : global___AssetType.ValueType = ...,
        width : builtins.int = ...,
        height : builtins.int = ...,
        image_channels : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_type",b"asset_type","dataset_name",b"dataset_name","height",b"height","image_channels",b"image_channels","timestamp",b"timestamp","tvt_type",b"tvt_type","width",b"width"]) -> None: ...
global___MetadataAttributes = MetadataAttributes

class Timestamp(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    start: builtins.int = ...
    """/ start time stamp"""

    duration: builtins.float = ...
    """/ duration (in seconds), for images, it's always 0"""

    def __init__(self,
        *,
        start : builtins.int = ...,
        duration : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration",b"duration","start",b"start"]) -> None: ...
global___Timestamp = Timestamp

class MirAnnotations(google.protobuf.message.Message):
    """/ ========== annotations.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TaskAnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleTaskAnnotations: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleTaskAnnotations] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TASK_ANNOTATIONS_FIELD_NUMBER: builtins.int
    HEAD_TASK_ID_FIELD_NUMBER: builtins.int
    @property
    def task_annotations(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleTaskAnnotations]:
        """/ key: task id, value: annotations of that single task"""
        pass
    head_task_id: typing.Text = ...
    def __init__(self,
        *,
        task_annotations : typing.Optional[typing.Mapping[typing.Text, global___SingleTaskAnnotations]] = ...,
        head_task_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["head_task_id",b"head_task_id","task_annotations",b"task_annotations"]) -> None: ...
global___MirAnnotations = MirAnnotations

class SingleTaskAnnotations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ImageAnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleImageAnnotations: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleImageAnnotations] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    IMAGE_ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def image_annotations(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleImageAnnotations]:
        """/ key: image id, value: annotations of that single image"""
        pass
    def __init__(self,
        *,
        image_annotations : typing.Optional[typing.Mapping[typing.Text, global___SingleImageAnnotations]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_annotations",b"image_annotations"]) -> None: ...
global___SingleTaskAnnotations = SingleTaskAnnotations

class SingleImageAnnotations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Annotation]: ...
    def __init__(self,
        *,
        annotations : typing.Optional[typing.Iterable[global___Annotation]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotations",b"annotations"]) -> None: ...
global___SingleImageAnnotations = SingleImageAnnotations

class Annotation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INDEX_FIELD_NUMBER: builtins.int
    BOX_FIELD_NUMBER: builtins.int
    CLASS_ID_FIELD_NUMBER: builtins.int
    SCORE_FIELD_NUMBER: builtins.int
    index: builtins.int = ...
    """Index of this annotation in current single image, may be different from the index in repeated field."""

    @property
    def box(self) -> global___Rect: ...
    class_id: builtins.int = ...
    score: builtins.float = ...
    def __init__(self,
        *,
        index : builtins.int = ...,
        box : typing.Optional[global___Rect] = ...,
        class_id : builtins.int = ...,
        score : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["box",b"box"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["box",b"box","class_id",b"class_id","index",b"index","score",b"score"]) -> None: ...
global___Annotation = Annotation

class Rect(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    W_FIELD_NUMBER: builtins.int
    H_FIELD_NUMBER: builtins.int
    x: builtins.int = ...
    y: builtins.int = ...
    w: builtins.int = ...
    h: builtins.int = ...
    def __init__(self,
        *,
        x : builtins.int = ...,
        y : builtins.int = ...,
        w : builtins.int = ...,
        h : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["h",b"h","w",b"w","x",b"x","y",b"y"]) -> None: ...
global___Rect = Rect

class MirKeywords(google.protobuf.message.Message):
    """/ ========== keywords.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class KeywordsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Keywords: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Keywords] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class PredifinedKeyidsCntEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class CustomizedKeywordsCntEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class IndexPredifinedKeyidsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        @property
        def value(self) -> global___Assets: ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : typing.Optional[global___Assets] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    KEYWORDS_FIELD_NUMBER: builtins.int
    PREDIFINED_KEYIDS_CNT_FIELD_NUMBER: builtins.int
    PREDIFINED_KEYIDS_TOTAL_FIELD_NUMBER: builtins.int
    CUSTOMIZED_KEYWORDS_CNT_FIELD_NUMBER: builtins.int
    CUSTOMIZED_KEYWORDS_TOTAL_FIELD_NUMBER: builtins.int
    INDEX_PREDIFINED_KEYIDS_FIELD_NUMBER: builtins.int
    @property
    def keywords(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Keywords]:
        """key: asset hash, value: keywords list
        cnt: count of keywords
        """
        pass
    @property
    def predifined_keyids_cnt(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
    predifined_keyids_total: builtins.int = ...
    """sum of predifined_keyids_cnt field."""

    @property
    def customized_keywords_cnt(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    customized_keywords_total: builtins.int = ...
    """sum of predifined_keyids_cnt field."""

    @property
    def index_predifined_keyids(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___Assets]:
        """store index map from key_id to set of asset_ids."""
        pass
    def __init__(self,
        *,
        keywords : typing.Optional[typing.Mapping[typing.Text, global___Keywords]] = ...,
        predifined_keyids_cnt : typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        predifined_keyids_total : builtins.int = ...,
        customized_keywords_cnt : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        customized_keywords_total : builtins.int = ...,
        index_predifined_keyids : typing.Optional[typing.Mapping[builtins.int, global___Assets]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["customized_keywords_cnt",b"customized_keywords_cnt","customized_keywords_total",b"customized_keywords_total","index_predifined_keyids",b"index_predifined_keyids","keywords",b"keywords","predifined_keyids_cnt",b"predifined_keyids_cnt","predifined_keyids_total",b"predifined_keyids_total"]) -> None: ...
global___MirKeywords = MirKeywords

class Assets(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSET_IDS_FIELD_NUMBER: builtins.int
    @property
    def asset_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        asset_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_ids",b"asset_ids"]) -> None: ...
global___Assets = Assets

class Keywords(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PREDIFINED_KEYIDS_FIELD_NUMBER: builtins.int
    CUSTOMIZED_KEYWORDS_FIELD_NUMBER: builtins.int
    @property
    def predifined_keyids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """predefined: managed id-keyword map"""
        pass
    @property
    def customized_keywords(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """customized: arbitrary user defined keywords"""
        pass
    def __init__(self,
        *,
        predifined_keyids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        customized_keywords : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["customized_keywords",b"customized_keywords","predifined_keyids",b"predifined_keyids"]) -> None: ...
global___Keywords = Keywords

class MirTasks(google.protobuf.message.Message):
    """/ ========== tasks.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TasksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Task: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Task] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TASKS_FIELD_NUMBER: builtins.int
    HEAD_TASK_ID_FIELD_NUMBER: builtins.int
    @property
    def tasks(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Task]: ...
    head_task_id: typing.Text = ...
    def __init__(self,
        *,
        tasks : typing.Optional[typing.Mapping[typing.Text, global___Task]] = ...,
        head_task_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["head_task_id",b"head_task_id","tasks",b"tasks"]) -> None: ...
global___MirTasks = MirTasks

class Task(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class UnknownTypesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    BASE_TASK_ID_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    UNKNOWN_TYPES_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    ANCESTOR_TASK_ID_FIELD_NUMBER: builtins.int
    type: global___TaskType.ValueType = ...
    name: typing.Text = ...
    """/ user defined task name"""

    task_id: typing.Text = ...
    """/ auto generated unique id"""

    base_task_id: typing.Text = ...
    """/ auto generated unique id"""

    timestamp: builtins.int = ...
    """/ execution time of this task"""

    @property
    def model(self) -> global___ModelMeta:
        """/ (special for training task): result model for cmd train"""
        pass
    @property
    def unknown_types(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]:
        """/ (special for import task): unknown types for cmd import"""
        pass
    code: global___RCode.ValueType = ...
    """/ return code of task"""

    args: typing.Text = ...
    """/ serialization result of arguments of this task, in yaml format"""

    ancestor_task_id: typing.Text = ...
    def __init__(self,
        *,
        type : global___TaskType.ValueType = ...,
        name : typing.Text = ...,
        task_id : typing.Text = ...,
        base_task_id : typing.Text = ...,
        timestamp : builtins.int = ...,
        model : typing.Optional[global___ModelMeta] = ...,
        unknown_types : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        code : global___RCode.ValueType = ...,
        args : typing.Text = ...,
        ancestor_task_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model",b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ancestor_task_id",b"ancestor_task_id","args",b"args","base_task_id",b"base_task_id","code",b"code","model",b"model","name",b"name","task_id",b"task_id","timestamp",b"timestamp","type",b"type","unknown_types",b"unknown_types"]) -> None: ...
global___Task = Task

class ModelMeta(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODEL_HASH_FIELD_NUMBER: builtins.int
    MEAN_AVERAGE_PRECISION_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    model_hash: typing.Text = ...
    """/ hash for models.tar.gz"""

    mean_average_precision: builtins.float = ...
    """/ model mAP"""

    context: typing.Text = ...
    """/ context generated by train command"""

    def __init__(self,
        *,
        model_hash : typing.Text = ...,
        mean_average_precision : builtins.float = ...,
        context : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["context",b"context","mean_average_precision",b"mean_average_precision","model_hash",b"model_hash"]) -> None: ...
global___ModelMeta = ModelMeta
