"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TvtType(_TvtType, metaclass=_TvtTypeEnumTypeWrapper):
    """/ assertion type: training, validation or test"""
    pass
class _TvtType:
    V = typing.NewType('V', builtins.int)
class _TvtTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TvtType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TvtTypeUnknown = TvtType.V(0)
    TvtTypeTraining = TvtType.V(1)
    TvtTypeValidation = TvtType.V(2)
    TvtTypeTest = TvtType.V(3)

TvtTypeUnknown = TvtType.V(0)
TvtTypeTraining = TvtType.V(1)
TvtTypeValidation = TvtType.V(2)
TvtTypeTest = TvtType.V(3)
global___TvtType = TvtType


class AssetType(_AssetType, metaclass=_AssetTypeEnumTypeWrapper):
    pass
class _AssetType:
    V = typing.NewType('V', builtins.int)
class _AssetTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    AssetTypeUnknown = AssetType.V(0)
    AssetTypeImageJpeg = AssetType.V(1)
    AssetTypeImagePng = AssetType.V(2)
    AssetTypeImagePixelMat = AssetType.V(3)
    AssetTypeImageYuv420p = AssetType.V(4)
    AssetTypeImageYuv420sp = AssetType.V(5)
    AssetTypeImageYuv422p = AssetType.V(6)
    AssetTypeImageYuv422sp = AssetType.V(7)
    AssetTypeImageBmp = AssetType.V(8)
    AssetTypeVideoMp4 = AssetType.V(101)

AssetTypeUnknown = AssetType.V(0)
AssetTypeImageJpeg = AssetType.V(1)
AssetTypeImagePng = AssetType.V(2)
AssetTypeImagePixelMat = AssetType.V(3)
AssetTypeImageYuv420p = AssetType.V(4)
AssetTypeImageYuv420sp = AssetType.V(5)
AssetTypeImageYuv422p = AssetType.V(6)
AssetTypeImageYuv422sp = AssetType.V(7)
AssetTypeImageBmp = AssetType.V(8)
AssetTypeVideoMp4 = AssetType.V(101)
global___AssetType = AssetType


class TaskType(_TaskType, metaclass=_TaskTypeEnumTypeWrapper):
    """/ task type"""
    pass
class _TaskType:
    V = typing.NewType('V', builtins.int)
class _TaskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TaskTypeUnknown = TaskType.V(0)
    TaskTypeTraining = TaskType.V(1)
    TaskTypeMining = TaskType.V(2)
    TaskTypeLabel = TaskType.V(3)
    TaskTypeFilter = TaskType.V(4)
    TaskTypeImportData = TaskType.V(5)
    TaskTypeExportData = TaskType.V(6)
    TaskTypeCopyData = TaskType.V(7)
    TaskTypeMerge = TaskType.V(8)
    TaskTypeInfer = TaskType.V(9)
    TaskTypeSampling = TaskType.V(10)
    TaskTypeFusion = TaskType.V(11)
    """/ used by ymir_controller"""

    TaskTypeInit = TaskType.V(12)
    TaskTypeImportModel = TaskType.V(13)
    TaskTypeCopyModel = TaskType.V(14)
    TaskTypeDatasetInfer = TaskType.V(15)
    TaskTypeEvaluate = TaskType.V(16)

TaskTypeUnknown = TaskType.V(0)
TaskTypeTraining = TaskType.V(1)
TaskTypeMining = TaskType.V(2)
TaskTypeLabel = TaskType.V(3)
TaskTypeFilter = TaskType.V(4)
TaskTypeImportData = TaskType.V(5)
TaskTypeExportData = TaskType.V(6)
TaskTypeCopyData = TaskType.V(7)
TaskTypeMerge = TaskType.V(8)
TaskTypeInfer = TaskType.V(9)
TaskTypeSampling = TaskType.V(10)
TaskTypeFusion = TaskType.V(11)
"""/ used by ymir_controller"""

TaskTypeInit = TaskType.V(12)
TaskTypeImportModel = TaskType.V(13)
TaskTypeCopyModel = TaskType.V(14)
TaskTypeDatasetInfer = TaskType.V(15)
TaskTypeEvaluate = TaskType.V(16)
global___TaskType = TaskType


class TaskState(_TaskState, metaclass=_TaskStateEnumTypeWrapper):
    pass
class _TaskState:
    V = typing.NewType('V', builtins.int)
class _TaskStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskState.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TaskStateUnknown = TaskState.V(0)
    TaskStatePending = TaskState.V(1)
    TaskStateRunning = TaskState.V(2)
    TaskStateDone = TaskState.V(3)
    TaskStateError = TaskState.V(4)
    TaskStateMiss = TaskState.V(5)

TaskStateUnknown = TaskState.V(0)
TaskStatePending = TaskState.V(1)
TaskStateRunning = TaskState.V(2)
TaskStateDone = TaskState.V(3)
TaskStateError = TaskState.V(4)
TaskStateMiss = TaskState.V(5)
global___TaskState = TaskState


class Sha1Type(_Sha1Type, metaclass=_Sha1TypeEnumTypeWrapper):
    pass
class _Sha1Type:
    V = typing.NewType('V', builtins.int)
class _Sha1TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Sha1Type.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SHA1_TYPE_UNKNOWN = Sha1Type.V(0)
    SHA1_TYPE_ASSET = Sha1Type.V(1)
    SHA1_TYPE_COMMIT = Sha1Type.V(2)

SHA1_TYPE_UNKNOWN = Sha1Type.V(0)
SHA1_TYPE_ASSET = Sha1Type.V(1)
SHA1_TYPE_COMMIT = Sha1Type.V(2)
global___Sha1Type = Sha1Type


class MirStorage(_MirStorage, metaclass=_MirStorageEnumTypeWrapper):
    pass
class _MirStorage:
    V = typing.NewType('V', builtins.int)
class _MirStorageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MirStorage.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    MIR_METADATAS = MirStorage.V(0)
    MIR_ANNOTATIONS = MirStorage.V(1)
    MIR_KEYWORDS = MirStorage.V(2)
    MIR_TASKS = MirStorage.V(3)
    MIR_CONTEXT = MirStorage.V(4)

MIR_METADATAS = MirStorage.V(0)
MIR_ANNOTATIONS = MirStorage.V(1)
MIR_KEYWORDS = MirStorage.V(2)
MIR_TASKS = MirStorage.V(3)
MIR_CONTEXT = MirStorage.V(4)
global___MirStorage = MirStorage


class AnnoFormat(_AnnoFormat, metaclass=_AnnoFormatEnumTypeWrapper):
    pass
class _AnnoFormat:
    V = typing.NewType('V', builtins.int)
class _AnnoFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AnnoFormat.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    AF_NO_ANNOTATION = AnnoFormat.V(0)
    AF_DET_PASCAL_VOC = AnnoFormat.V(1)
    AF_DET_ARK_JSON = AnnoFormat.V(2)
    AF_DET_LS_JSON = AnnoFormat.V(3)
    AF_SEG_POLYGON = AnnoFormat.V(4)
    AF_SEG_MASK = AnnoFormat.V(5)

AF_NO_ANNOTATION = AnnoFormat.V(0)
AF_DET_PASCAL_VOC = AnnoFormat.V(1)
AF_DET_ARK_JSON = AnnoFormat.V(2)
AF_DET_LS_JSON = AnnoFormat.V(3)
AF_SEG_POLYGON = AnnoFormat.V(4)
AF_SEG_MASK = AnnoFormat.V(5)
global___AnnoFormat = AnnoFormat


class AssetFormat(_AssetFormat, metaclass=_AssetFormatEnumTypeWrapper):
    pass
class _AssetFormat:
    V = typing.NewType('V', builtins.int)
class _AssetFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetFormat.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    AF_UNKNOWN = AssetFormat.V(0)
    AF_RAW = AssetFormat.V(1)
    AF_LMDB = AssetFormat.V(2)

AF_UNKNOWN = AssetFormat.V(0)
AF_RAW = AssetFormat.V(1)
AF_LMDB = AssetFormat.V(2)
global___AssetFormat = AssetFormat


class AnnoType(_AnnoType, metaclass=_AnnoTypeEnumTypeWrapper):
    pass
class _AnnoType:
    V = typing.NewType('V', builtins.int)
class _AnnoTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AnnoType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    AT_UNKNOWN = AnnoType.V(0)
    AT_CLASS = AnnoType.V(1)
    """Classification with class id, not implemented."""

    AT_DET_BOX = AnnoType.V(2)
    """Detection w. bounding box."""

    AT_SEG_POLYGON = AnnoType.V(3)
    """Semantic Segmentation w. ploygons."""

    AT_SEG_MASK = AnnoType.V(4)
    """Instance Segmentation w. mask."""


AT_UNKNOWN = AnnoType.V(0)
AT_CLASS = AnnoType.V(1)
"""Classification with class id, not implemented."""

AT_DET_BOX = AnnoType.V(2)
"""Detection w. bounding box."""

AT_SEG_POLYGON = AnnoType.V(3)
"""Semantic Segmentation w. ploygons."""

AT_SEG_MASK = AnnoType.V(4)
"""Instance Segmentation w. mask."""

global___AnnoType = AnnoType


class ConfusionMatrixType(_ConfusionMatrixType, metaclass=_ConfusionMatrixTypeEnumTypeWrapper):
    pass
class _ConfusionMatrixType:
    V = typing.NewType('V', builtins.int)
class _ConfusionMatrixTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConfusionMatrixType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    NotSet = ConfusionMatrixType.V(0)
    TP = ConfusionMatrixType.V(1)
    FP = ConfusionMatrixType.V(2)
    FN = ConfusionMatrixType.V(3)
    TN = ConfusionMatrixType.V(4)
    Unknown = ConfusionMatrixType.V(5)
    MTP = ConfusionMatrixType.V(11)
    """Matched True Positive, only for gt."""

    IGNORED = ConfusionMatrixType.V(12)

NotSet = ConfusionMatrixType.V(0)
TP = ConfusionMatrixType.V(1)
FP = ConfusionMatrixType.V(2)
FN = ConfusionMatrixType.V(3)
TN = ConfusionMatrixType.V(4)
Unknown = ConfusionMatrixType.V(5)
MTP = ConfusionMatrixType.V(11)
"""Matched True Positive, only for gt."""

IGNORED = ConfusionMatrixType.V(12)
global___ConfusionMatrixType = ConfusionMatrixType


class EvaluationState(_EvaluationState, metaclass=_EvaluationStateEnumTypeWrapper):
    pass
class _EvaluationState:
    V = typing.NewType('V', builtins.int)
class _EvaluationStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EvaluationState.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ES_NOT_SET = EvaluationState.V(0)
    """evaluate not started"""

    ES_READY = EvaluationState.V(1)
    """evaluation result ready to use"""

    ES_NO_GT_OR_PRED = EvaluationState.V(2)
    """evaluation not finished because there's no gt or pred"""

    ES_EXCEEDS_LIMIT = EvaluationState.V(3)
    """evaluation not finished because there're too many images or too many class ids"""

    ES_NO_CLASS_IDS = EvaluationState.V(4)
    """evaluation not finished because there's no evaluate class ids"""


ES_NOT_SET = EvaluationState.V(0)
"""evaluate not started"""

ES_READY = EvaluationState.V(1)
"""evaluation result ready to use"""

ES_NO_GT_OR_PRED = EvaluationState.V(2)
"""evaluation not finished because there's no gt or pred"""

ES_EXCEEDS_LIMIT = EvaluationState.V(3)
"""evaluation not finished because there're too many images or too many class ids"""

ES_NO_CLASS_IDS = EvaluationState.V(4)
"""evaluation not finished because there's no evaluate class ids"""

global___EvaluationState = EvaluationState


class MirMetadatas(google.protobuf.message.Message):
    """/ ========== metadatas.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___MetadataAttributes: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___MetadataAttributes] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ATTRIBUTES_FIELD_NUMBER: builtins.int
    @property
    def attributes(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MetadataAttributes]:
        """/ key: asset hash, value: attributes"""
        pass
    def __init__(self,
        *,
        attributes : typing.Optional[typing.Mapping[typing.Text, global___MetadataAttributes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributes",b"attributes"]) -> None: ...
global___MirMetadatas = MirMetadatas

class MetadataAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIMESTAMP_FIELD_NUMBER: builtins.int
    TVT_TYPE_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    IMAGE_CHANNELS_FIELD_NUMBER: builtins.int
    BYTE_SIZE_FIELD_NUMBER: builtins.int
    ORIGIN_FILENAME_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> global___Timestamp: ...
    tvt_type: global___TvtType.V = ...
    asset_type: global___AssetType.V = ...
    width: builtins.int = ...
    """/ column number"""

    height: builtins.int = ...
    """/ row number"""

    image_channels: builtins.int = ...
    """/ (for images) channel count"""

    byte_size: builtins.int = ...
    origin_filename: typing.Text = ...
    def __init__(self,
        *,
        timestamp : typing.Optional[global___Timestamp] = ...,
        tvt_type : global___TvtType.V = ...,
        asset_type : global___AssetType.V = ...,
        width : builtins.int = ...,
        height : builtins.int = ...,
        image_channels : builtins.int = ...,
        byte_size : builtins.int = ...,
        origin_filename : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_type",b"asset_type","byte_size",b"byte_size","height",b"height","image_channels",b"image_channels","origin_filename",b"origin_filename","timestamp",b"timestamp","tvt_type",b"tvt_type","width",b"width"]) -> None: ...
global___MetadataAttributes = MetadataAttributes

class Timestamp(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    start: builtins.int = ...
    """/ start time stamp, use int32 as int64 is not correctly parsed."""

    duration: builtins.float = ...
    """/ duration (in seconds), for images, it's always 0"""

    def __init__(self,
        *,
        start : builtins.int = ...,
        duration : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration",b"duration","start",b"start"]) -> None: ...
global___Timestamp = Timestamp

class MirAnnotations(google.protobuf.message.Message):
    """/ ========== annotations.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ImageCksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleImageCks: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleImageCks] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    GROUND_TRUTH_FIELD_NUMBER: builtins.int
    PREDICTION_FIELD_NUMBER: builtins.int
    IMAGE_CKS_FIELD_NUMBER: builtins.int
    @property
    def ground_truth(self) -> global___SingleTaskAnnotations: ...
    @property
    def prediction(self) -> global___SingleTaskAnnotations: ...
    @property
    def image_cks(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleImageCks]:
        """key: asset id, value: cks and image quality, from pred and gt"""
        pass
    def __init__(self,
        *,
        ground_truth : typing.Optional[global___SingleTaskAnnotations] = ...,
        prediction : typing.Optional[global___SingleTaskAnnotations] = ...,
        image_cks : typing.Optional[typing.Mapping[typing.Text, global___SingleImageCks]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ground_truth",b"ground_truth","prediction",b"prediction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ground_truth",b"ground_truth","image_cks",b"image_cks","prediction",b"prediction"]) -> None: ...
global___MirAnnotations = MirAnnotations

class SingleTaskAnnotations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ImageAnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleImageAnnotations: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleImageAnnotations] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MapIdColorEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        @property
        def value(self) -> global___IntPoint: ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : typing.Optional[global___IntPoint] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    IMAGE_ANNOTATIONS_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    TASK_CLASS_IDS_FIELD_NUMBER: builtins.int
    MAP_ID_COLOR_FIELD_NUMBER: builtins.int
    EVAL_CLASS_IDS_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    EXECUTOR_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def image_annotations(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleImageAnnotations]:
        """/ key: image id, value: annotations of that single image"""
        pass
    task_id: typing.Text = ...
    type: global___AnnoType.V = ...
    @property
    def task_class_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Set of all shown class ids."""
        pass
    @property
    def map_id_color(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___IntPoint]: ...
    @property
    def eval_class_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """meta infos of this SingleTaskAnnotations"""
        pass
    @property
    def model(self) -> global___ModelMeta:
        """model meta info associated with this single_task_annotations"""
        pass
    executor_config: typing.Text = ...
    """executor config used to generate this single task annotations"""

    def __init__(self,
        *,
        image_annotations : typing.Optional[typing.Mapping[typing.Text, global___SingleImageAnnotations]] = ...,
        task_id : typing.Text = ...,
        type : global___AnnoType.V = ...,
        task_class_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        map_id_color : typing.Optional[typing.Mapping[builtins.int, global___IntPoint]] = ...,
        eval_class_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        model : typing.Optional[global___ModelMeta] = ...,
        executor_config : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model",b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eval_class_ids",b"eval_class_ids","executor_config",b"executor_config","image_annotations",b"image_annotations","map_id_color",b"map_id_color","model",b"model","task_class_ids",b"task_class_ids","task_id",b"task_id","type",b"type"]) -> None: ...
global___SingleTaskAnnotations = SingleTaskAnnotations

class SingleImageAnnotations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BOXES_FIELD_NUMBER: builtins.int
    POLYGONS_FIELD_NUMBER: builtins.int
    MASK_FIELD_NUMBER: builtins.int
    IMG_CLASS_IDS_FIELD_NUMBER: builtins.int
    @property
    def boxes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectAnnotation]: ...
    @property
    def polygons(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectAnnotation]: ...
    @property
    def mask(self) -> global___MaskAnnotation: ...
    @property
    def img_class_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Set of class ids shown in this image."""
        pass
    def __init__(self,
        *,
        boxes : typing.Optional[typing.Iterable[global___ObjectAnnotation]] = ...,
        polygons : typing.Optional[typing.Iterable[global___ObjectAnnotation]] = ...,
        mask : typing.Optional[global___MaskAnnotation] = ...,
        img_class_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["mask",b"mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boxes",b"boxes","img_class_ids",b"img_class_ids","mask",b"mask","polygons",b"polygons"]) -> None: ...
global___SingleImageAnnotations = SingleImageAnnotations

class SingleImageCks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CKS_FIELD_NUMBER: builtins.int
    IMAGE_QUALITY_FIELD_NUMBER: builtins.int
    @property
    def cks(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    image_quality: builtins.float = ...
    def __init__(self,
        *,
        cks : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        image_quality : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cks",b"cks","image_quality",b"image_quality"]) -> None: ...
global___SingleImageCks = SingleImageCks

class MaskAnnotation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEMANTIC_MASK_FIELD_NUMBER: builtins.int
    INSTANCE_MASK_FIELD_NUMBER: builtins.int
    OBJECT_IDS_FIELD_NUMBER: builtins.int
    semantic_mask: builtins.bytes = ...
    """PNG image with 3 channels where each pixel corresponds to a class_id."""

    instance_mask: builtins.bytes = ...
    """PNG image with 3 channels where each pixel corresponds to an object_id."""

    @property
    def object_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(self,
        *,
        semantic_mask : builtins.bytes = ...,
        instance_mask : builtins.bytes = ...,
        object_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_mask",b"instance_mask","object_ids",b"object_ids","semantic_mask",b"semantic_mask"]) -> None: ...
global___MaskAnnotation = MaskAnnotation

class ObjectAnnotation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    INDEX_FIELD_NUMBER: builtins.int
    BOX_FIELD_NUMBER: builtins.int
    CLASS_ID_FIELD_NUMBER: builtins.int
    SCORE_FIELD_NUMBER: builtins.int
    ANNO_QUALITY_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    CM_FIELD_NUMBER: builtins.int
    DET_LINK_ID_FIELD_NUMBER: builtins.int
    CLASS_NAME_FIELD_NUMBER: builtins.int
    POLYGON_FIELD_NUMBER: builtins.int
    index: builtins.int = ...
    """Index of this annotation in current single image, may be different from the index in repeated field."""

    @property
    def box(self) -> global___Rect: ...
    class_id: builtins.int = ...
    score: builtins.float = ...
    anno_quality: builtins.float = ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    cm: global___ConfusionMatrixType.V = ...
    det_link_id: builtins.int = ...
    class_name: typing.Text = ...
    """for data parsed from outside, e.g. inference."""

    @property
    def polygon(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IntPoint]: ...
    def __init__(self,
        *,
        index : builtins.int = ...,
        box : typing.Optional[global___Rect] = ...,
        class_id : builtins.int = ...,
        score : builtins.float = ...,
        anno_quality : builtins.float = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        cm : global___ConfusionMatrixType.V = ...,
        det_link_id : builtins.int = ...,
        class_name : typing.Text = ...,
        polygon : typing.Optional[typing.Iterable[global___IntPoint]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["box",b"box"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["anno_quality",b"anno_quality","box",b"box","class_id",b"class_id","class_name",b"class_name","cm",b"cm","det_link_id",b"det_link_id","index",b"index","polygon",b"polygon","score",b"score","tags",b"tags"]) -> None: ...
global___ObjectAnnotation = ObjectAnnotation

class Rect(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    W_FIELD_NUMBER: builtins.int
    H_FIELD_NUMBER: builtins.int
    ROTATE_ANGLE_FIELD_NUMBER: builtins.int
    x: builtins.int = ...
    y: builtins.int = ...
    w: builtins.int = ...
    h: builtins.int = ...
    rotate_angle: builtins.float = ...
    """unit in pi."""

    def __init__(self,
        *,
        x : builtins.int = ...,
        y : builtins.int = ...,
        w : builtins.int = ...,
        h : builtins.int = ...,
        rotate_angle : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["h",b"h","rotate_angle",b"rotate_angle","w",b"w","x",b"x","y",b"y"]) -> None: ...
global___Rect = Rect

class MirKeywords(google.protobuf.message.Message):
    """/ ========== keywords.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CkIdxEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AssetAnnoIndex: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___AssetAnnoIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PRED_IDX_FIELD_NUMBER: builtins.int
    GT_IDX_FIELD_NUMBER: builtins.int
    CK_IDX_FIELD_NUMBER: builtins.int
    @property
    def pred_idx(self) -> global___CiTagToIndex:
        """ci to assets, generated from preds"""
        pass
    @property
    def gt_idx(self) -> global___CiTagToIndex:
        """ci to assets, generated from gt"""
        pass
    @property
    def ck_idx(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AssetAnnoIndex]:
        """key: ck main key, value: assets and assets with sub keys, from (mir_annotations.image_cks) pred and gt"""
        pass
    def __init__(self,
        *,
        pred_idx : typing.Optional[global___CiTagToIndex] = ...,
        gt_idx : typing.Optional[global___CiTagToIndex] = ...,
        ck_idx : typing.Optional[typing.Mapping[typing.Text, global___AssetAnnoIndex]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gt_idx",b"gt_idx","pred_idx",b"pred_idx"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ck_idx",b"ck_idx","gt_idx",b"gt_idx","pred_idx",b"pred_idx"]) -> None: ...
global___MirKeywords = MirKeywords

class CiTagToIndex(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CisEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        @property
        def value(self) -> global___MapStringToInt32List: ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : typing.Optional[global___MapStringToInt32List] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AssetAnnoIndex: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___AssetAnnoIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CIS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def cis(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___MapStringToInt32List]:
        """key: ci, value: annos"""
        pass
    @property
    def tags(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AssetAnnoIndex]:
        """key: ck main key, value: annos and annos with sub keys"""
        pass
    def __init__(self,
        *,
        cis : typing.Optional[typing.Mapping[builtins.int, global___MapStringToInt32List]] = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, global___AssetAnnoIndex]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cis",b"cis","tags",b"tags"]) -> None: ...
global___CiTagToIndex = CiTagToIndex

class StringList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSET_IDS_FIELD_NUMBER: builtins.int
    @property
    def asset_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        asset_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_ids",b"asset_ids"]) -> None: ...
global___StringList = StringList

class MapStringToInt32List(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class KeyIdsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Int32List: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Int32List] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    KEY_IDS_FIELD_NUMBER: builtins.int
    @property
    def key_ids(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Int32List]: ...
    def __init__(self,
        *,
        key_ids : typing.Optional[typing.Mapping[typing.Text, global___Int32List]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_ids",b"key_ids"]) -> None: ...
global___MapStringToInt32List = MapStringToInt32List

class Int32List(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IDS_FIELD_NUMBER: builtins.int
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(self,
        *,
        ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids",b"ids"]) -> None: ...
global___Int32List = Int32List

class AssetAnnoIndex(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AssetAnnosEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Int32List: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Int32List] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class SubIndexesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___MapStringToInt32List: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___MapStringToInt32List] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ASSET_ANNOS_FIELD_NUMBER: builtins.int
    SUB_INDEXES_FIELD_NUMBER: builtins.int
    @property
    def asset_annos(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Int32List]:
        """key: asset id, value: annotation indexes"""
        pass
    @property
    def sub_indexes(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MapStringToInt32List]:
        """key: ck value, value: asset and it's annotation indexes"""
        pass
    def __init__(self,
        *,
        asset_annos : typing.Optional[typing.Mapping[typing.Text, global___Int32List]] = ...,
        sub_indexes : typing.Optional[typing.Mapping[typing.Text, global___MapStringToInt32List]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_annos",b"asset_annos","sub_indexes",b"sub_indexes"]) -> None: ...
global___AssetAnnoIndex = AssetAnnoIndex

class MirTasks(google.protobuf.message.Message):
    """/ ========== tasks.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TasksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Task: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Task] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TASKS_FIELD_NUMBER: builtins.int
    HEAD_TASK_ID_FIELD_NUMBER: builtins.int
    @property
    def tasks(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Task]: ...
    head_task_id: typing.Text = ...
    def __init__(self,
        *,
        tasks : typing.Optional[typing.Mapping[typing.Text, global___Task]] = ...,
        head_task_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["head_task_id",b"head_task_id","tasks",b"tasks"]) -> None: ...
global___MirTasks = MirTasks

class Task(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class NewTypesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    RETURN_CODE_FIELD_NUMBER: builtins.int
    RETURN_MSG_FIELD_NUMBER: builtins.int
    EVALUATION_FIELD_NUMBER: builtins.int
    NEW_TYPES_FIELD_NUMBER: builtins.int
    NEW_TYPES_ADDED_FIELD_NUMBER: builtins.int
    SERIALIZED_TASK_PARAMETERS_FIELD_NUMBER: builtins.int
    SERIALIZED_EXECUTOR_CONFIG_FIELD_NUMBER: builtins.int
    SRC_REVS_FIELD_NUMBER: builtins.int
    DST_REV_FIELD_NUMBER: builtins.int
    EXECUTOR_FIELD_NUMBER: builtins.int
    type: global___TaskType.V = ...
    name: typing.Text = ...
    """/ user defined task name"""

    task_id: typing.Text = ...
    """/ auto generated unique id"""

    timestamp: builtins.int = ...
    """/ execution time of this task
    RFC 3339 date strings
    """

    @property
    def model(self) -> global___ModelMeta:
        """/ (for training task): result model for cmd train"""
        pass
    return_code: builtins.int = ...
    return_msg: typing.Text = ...
    @property
    def evaluation(self) -> global___Evaluation: ...
    @property
    def new_types(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]:
        """/ (for import task): new types for cmd import, key: class name, value: asset count"""
        pass
    new_types_added: builtins.bool = ...
    """/ (for import task): reason for new types, True: added, False: ignored"""

    serialized_task_parameters: typing.Text = ...
    serialized_executor_config: typing.Text = ...
    src_revs: typing.Text = ...
    dst_rev: typing.Text = ...
    executor: typing.Text = ...
    def __init__(self,
        *,
        type : global___TaskType.V = ...,
        name : typing.Text = ...,
        task_id : typing.Text = ...,
        timestamp : builtins.int = ...,
        model : typing.Optional[global___ModelMeta] = ...,
        return_code : builtins.int = ...,
        return_msg : typing.Text = ...,
        evaluation : typing.Optional[global___Evaluation] = ...,
        new_types : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        new_types_added : builtins.bool = ...,
        serialized_task_parameters : typing.Text = ...,
        serialized_executor_config : typing.Text = ...,
        src_revs : typing.Text = ...,
        dst_rev : typing.Text = ...,
        executor : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["evaluation",b"evaluation","model",b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dst_rev",b"dst_rev","evaluation",b"evaluation","executor",b"executor","model",b"model","name",b"name","new_types",b"new_types","new_types_added",b"new_types_added","return_code",b"return_code","return_msg",b"return_msg","serialized_executor_config",b"serialized_executor_config","serialized_task_parameters",b"serialized_task_parameters","src_revs",b"src_revs","task_id",b"task_id","timestamp",b"timestamp","type",b"type"]) -> None: ...
global___Task = Task

class ModelMeta(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StagesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ModelStage: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ModelStage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    MODEL_HASH_FIELD_NUMBER: builtins.int
    MEAN_AVERAGE_PRECISION_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    STAGES_FIELD_NUMBER: builtins.int
    BEST_STAGE_NAME_FIELD_NUMBER: builtins.int
    CLASS_NAMES_FIELD_NUMBER: builtins.int
    model_hash: typing.Text = ...
    """/ hash for models.tar.gz"""

    mean_average_precision: builtins.float = ...
    """/ model mAP"""

    context: typing.Text = ...
    """/ context generated by train command"""

    @property
    def stages(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ModelStage]: ...
    best_stage_name: typing.Text = ...
    @property
    def class_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        model_hash : typing.Text = ...,
        mean_average_precision : builtins.float = ...,
        context : typing.Text = ...,
        stages : typing.Optional[typing.Mapping[typing.Text, global___ModelStage]] = ...,
        best_stage_name : typing.Text = ...,
        class_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["best_stage_name",b"best_stage_name","class_names",b"class_names","context",b"context","mean_average_precision",b"mean_average_precision","model_hash",b"model_hash","stages",b"stages"]) -> None: ...
global___ModelMeta = ModelMeta

class ModelStage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STAGE_NAME_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    MAP_FIELD_NUMBER: builtins.int
    stage_name: typing.Text = ...
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    timestamp: builtins.int = ...
    mAP: builtins.float = ...
    def __init__(self,
        *,
        stage_name : typing.Text = ...,
        files : typing.Optional[typing.Iterable[typing.Text]] = ...,
        timestamp : builtins.int = ...,
        mAP : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["files",b"files","mAP",b"mAP","stage_name",b"stage_name","timestamp",b"timestamp"]) -> None: ...
global___ModelStage = ModelStage

class Evaluation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SubCksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleDatasetEvaluation: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleDatasetEvaluation] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CONFIG_FIELD_NUMBER: builtins.int
    DATASET_EVALUATION_FIELD_NUMBER: builtins.int
    MAIN_CK_FIELD_NUMBER: builtins.int
    SUB_CKS_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    @property
    def config(self) -> global___EvaluateConfig: ...
    @property
    def dataset_evaluation(self) -> global___SingleDatasetEvaluation: ...
    @property
    def main_ck(self) -> global___SingleDatasetEvaluation: ...
    @property
    def sub_cks(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleDatasetEvaluation]: ...
    state: global___EvaluationState.V = ...
    def __init__(self,
        *,
        config : typing.Optional[global___EvaluateConfig] = ...,
        dataset_evaluation : typing.Optional[global___SingleDatasetEvaluation] = ...,
        main_ck : typing.Optional[global___SingleDatasetEvaluation] = ...,
        sub_cks : typing.Optional[typing.Mapping[typing.Text, global___SingleDatasetEvaluation]] = ...,
        state : global___EvaluationState.V = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config","dataset_evaluation",b"dataset_evaluation","main_ck",b"main_ck"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","dataset_evaluation",b"dataset_evaluation","main_ck",b"main_ck","state",b"state","sub_cks",b"sub_cks"]) -> None: ...
global___Evaluation = Evaluation

class EvaluateConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONF_THR_FIELD_NUMBER: builtins.int
    IOU_THRS_INTERVAL_FIELD_NUMBER: builtins.int
    NEED_PR_CURVE_FIELD_NUMBER: builtins.int
    CLASS_IDS_FIELD_NUMBER: builtins.int
    MAIN_CK_FIELD_NUMBER: builtins.int
    conf_thr: builtins.float = ...
    iou_thrs_interval: typing.Text = ...
    need_pr_curve: builtins.bool = ...
    @property
    def class_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    main_ck: typing.Text = ...
    def __init__(self,
        *,
        conf_thr : builtins.float = ...,
        iou_thrs_interval : typing.Text = ...,
        need_pr_curve : builtins.bool = ...,
        class_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        main_ck : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["class_ids",b"class_ids","conf_thr",b"conf_thr","iou_thrs_interval",b"iou_thrs_interval","main_ck",b"main_ck","need_pr_curve",b"need_pr_curve"]) -> None: ...
global___EvaluateConfig = EvaluateConfig

class SingleDatasetEvaluation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class IouEvaluationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleIouEvaluation: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleIouEvaluation] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CONF_THR_FIELD_NUMBER: builtins.int
    IOU_EVALUATIONS_FIELD_NUMBER: builtins.int
    IOU_AVERAGED_EVALUATION_FIELD_NUMBER: builtins.int
    conf_thr: builtins.float = ...
    @property
    def iou_evaluations(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleIouEvaluation]:
        """key: string of iou threshold"""
        pass
    @property
    def iou_averaged_evaluation(self) -> global___SingleIouEvaluation:
        """average for all ious"""
        pass
    def __init__(self,
        *,
        conf_thr : builtins.float = ...,
        iou_evaluations : typing.Optional[typing.Mapping[typing.Text, global___SingleIouEvaluation]] = ...,
        iou_averaged_evaluation : typing.Optional[global___SingleIouEvaluation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["iou_averaged_evaluation",b"iou_averaged_evaluation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conf_thr",b"conf_thr","iou_averaged_evaluation",b"iou_averaged_evaluation","iou_evaluations",b"iou_evaluations"]) -> None: ...
global___SingleDatasetEvaluation = SingleDatasetEvaluation

class SingleIouEvaluation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CiEvaluationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        @property
        def value(self) -> global___SingleEvaluationElement: ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : typing.Optional[global___SingleEvaluationElement] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CI_EVALUATIONS_FIELD_NUMBER: builtins.int
    CI_AVERAGED_EVALUATION_FIELD_NUMBER: builtins.int
    @property
    def ci_evaluations(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___SingleEvaluationElement]:
        """key: class ids"""
        pass
    @property
    def ci_averaged_evaluation(self) -> global___SingleEvaluationElement:
        """evaluations averaged by class ids"""
        pass
    def __init__(self,
        *,
        ci_evaluations : typing.Optional[typing.Mapping[builtins.int, global___SingleEvaluationElement]] = ...,
        ci_averaged_evaluation : typing.Optional[global___SingleEvaluationElement] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ci_averaged_evaluation",b"ci_averaged_evaluation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ci_averaged_evaluation",b"ci_averaged_evaluation","ci_evaluations",b"ci_evaluations"]) -> None: ...
global___SingleIouEvaluation = SingleIouEvaluation

class SingleEvaluationElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AP_FIELD_NUMBER: builtins.int
    AR_FIELD_NUMBER: builtins.int
    TP_FIELD_NUMBER: builtins.int
    FP_FIELD_NUMBER: builtins.int
    FN_FIELD_NUMBER: builtins.int
    PR_CURVE_FIELD_NUMBER: builtins.int
    ap: builtins.float = ...
    ar: builtins.float = ...
    tp: builtins.int = ...
    fp: builtins.int = ...
    fn: builtins.int = ...
    @property
    def pr_curve(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FloatPoint]: ...
    def __init__(self,
        *,
        ap : builtins.float = ...,
        ar : builtins.float = ...,
        tp : builtins.int = ...,
        fp : builtins.int = ...,
        fn : builtins.int = ...,
        pr_curve : typing.Optional[typing.Iterable[global___FloatPoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ap",b"ap","ar",b"ar","fn",b"fn","fp",b"fp","pr_curve",b"pr_curve","tp",b"tp"]) -> None: ...
global___SingleEvaluationElement = SingleEvaluationElement

class IntPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.int = ...
    y: builtins.int = ...
    z: builtins.int = ...
    def __init__(self,
        *,
        x : builtins.int = ...,
        y : builtins.int = ...,
        z : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y","z",b"z"]) -> None: ...
global___IntPoint = IntPoint

class FloatPoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float = ...
    y: builtins.float = ...
    z: builtins.float = ...
    def __init__(self,
        *,
        x : builtins.float = ...,
        y : builtins.float = ...,
        z : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y","z",b"z"]) -> None: ...
global___FloatPoint = FloatPoint

class MirContext(google.protobuf.message.Message):
    """/ ========== context.mir =========="""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CksCntEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleMapCount: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleMapCount] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    IMAGES_CNT_FIELD_NUMBER: builtins.int
    CKS_CNT_FIELD_NUMBER: builtins.int
    TOTAL_ASSET_MBYTES_FIELD_NUMBER: builtins.int
    PRED_STATS_FIELD_NUMBER: builtins.int
    GT_STATS_FIELD_NUMBER: builtins.int
    images_cnt: builtins.int = ...
    """/ total images count"""

    @property
    def cks_cnt(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleMapCount]:
        """/ from pred and gt"""
        pass
    total_asset_mbytes: builtins.int = ...
    @property
    def pred_stats(self) -> global___AnnoStats: ...
    @property
    def gt_stats(self) -> global___AnnoStats: ...
    def __init__(self,
        *,
        images_cnt : builtins.int = ...,
        cks_cnt : typing.Optional[typing.Mapping[typing.Text, global___SingleMapCount]] = ...,
        total_asset_mbytes : builtins.int = ...,
        pred_stats : typing.Optional[global___AnnoStats] = ...,
        gt_stats : typing.Optional[global___AnnoStats] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gt_stats",b"gt_stats","pred_stats",b"pred_stats"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cks_cnt",b"cks_cnt","gt_stats",b"gt_stats","images_cnt",b"images_cnt","pred_stats",b"pred_stats","total_asset_mbytes",b"total_asset_mbytes"]) -> None: ...
global___MirContext = MirContext

class SingleMapCount(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SubCntEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CNT_FIELD_NUMBER: builtins.int
    SUB_CNT_FIELD_NUMBER: builtins.int
    cnt: builtins.int = ...
    @property
    def sub_cnt(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    def __init__(self,
        *,
        cnt : builtins.int = ...,
        sub_cnt : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cnt",b"cnt","sub_cnt",b"sub_cnt"]) -> None: ...
global___SingleMapCount = SingleMapCount

class AnnoStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsCntEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SingleMapCount: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SingleMapCount] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class ClassIdsCntEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TOTAL_CNT_FIELD_NUMBER: builtins.int
    POSITIVE_ASSET_CNT_FIELD_NUMBER: builtins.int
    NEGATIVE_ASSET_CNT_FIELD_NUMBER: builtins.int
    TAGS_CNT_FIELD_NUMBER: builtins.int
    CLASS_IDS_CNT_FIELD_NUMBER: builtins.int
    EVAL_CLASS_IDS_FIELD_NUMBER: builtins.int
    total_cnt: builtins.int = ...
    positive_asset_cnt: builtins.int = ...
    negative_asset_cnt: builtins.int = ...
    @property
    def tags_cnt(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SingleMapCount]:
        """key: main tag name, value: main tag count and sub tag names and counts"""
        pass
    @property
    def class_ids_cnt(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]:
        """key: class ids, value: asset count for this class id"""
        pass
    @property
    def eval_class_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Shortcut of class_ids for evaluation (dup. field as in SingleTaskAnnotations)."""
        pass
    def __init__(self,
        *,
        total_cnt : builtins.int = ...,
        positive_asset_cnt : builtins.int = ...,
        negative_asset_cnt : builtins.int = ...,
        tags_cnt : typing.Optional[typing.Mapping[typing.Text, global___SingleMapCount]] = ...,
        class_ids_cnt : typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        eval_class_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["class_ids_cnt",b"class_ids_cnt","eval_class_ids",b"eval_class_ids","negative_asset_cnt",b"negative_asset_cnt","positive_asset_cnt",b"positive_asset_cnt","tags_cnt",b"tags_cnt","total_cnt",b"total_cnt"]) -> None: ...
global___AnnoStats = AnnoStats

class ExportConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSET_FORMAT_FIELD_NUMBER: builtins.int
    ASSET_DIR_FIELD_NUMBER: builtins.int
    ASSET_INDEX_FILE_FIELD_NUMBER: builtins.int
    ASSET_INDEX_PREFIX_FIELD_NUMBER: builtins.int
    MEDIA_LOCATION_FIELD_NUMBER: builtins.int
    NEED_SUB_FOLDER_FIELD_NUMBER: builtins.int
    ANNO_FORMAT_FIELD_NUMBER: builtins.int
    GT_DIR_FIELD_NUMBER: builtins.int
    GT_INDEX_FILE_FIELD_NUMBER: builtins.int
    GT_INDEX_PREFIX_FIELD_NUMBER: builtins.int
    PRED_DIR_FIELD_NUMBER: builtins.int
    PRED_INDEX_FILE_FIELD_NUMBER: builtins.int
    PRED_INDEX_PREFIX_FIELD_NUMBER: builtins.int
    TVT_INDEX_DIR_FIELD_NUMBER: builtins.int
    asset_format: global___AssetFormat.V = ...
    """Asset config."""

    asset_dir: typing.Text = ...
    asset_index_file: typing.Text = ...
    asset_index_prefix: typing.Text = ...
    """Index file writes abs path. In TMI case, path should be converted, e.g. /in/assets."""

    media_location: typing.Text = ...
    need_sub_folder: builtins.bool = ...
    anno_format: global___AnnoFormat.V = ...
    """Annotation config."""

    gt_dir: typing.Text = ...
    gt_index_file: typing.Text = ...
    gt_index_prefix: typing.Text = ...
    pred_dir: typing.Text = ...
    pred_index_file: typing.Text = ...
    pred_index_prefix: typing.Text = ...
    tvt_index_dir: typing.Text = ...
    def __init__(self,
        *,
        asset_format : global___AssetFormat.V = ...,
        asset_dir : typing.Text = ...,
        asset_index_file : typing.Text = ...,
        asset_index_prefix : typing.Text = ...,
        media_location : typing.Text = ...,
        need_sub_folder : builtins.bool = ...,
        anno_format : global___AnnoFormat.V = ...,
        gt_dir : typing.Text = ...,
        gt_index_file : typing.Text = ...,
        gt_index_prefix : typing.Text = ...,
        pred_dir : typing.Text = ...,
        pred_index_file : typing.Text = ...,
        pred_index_prefix : typing.Text = ...,
        tvt_index_dir : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["anno_format",b"anno_format","asset_dir",b"asset_dir","asset_format",b"asset_format","asset_index_file",b"asset_index_file","asset_index_prefix",b"asset_index_prefix","gt_dir",b"gt_dir","gt_index_file",b"gt_index_file","gt_index_prefix",b"gt_index_prefix","media_location",b"media_location","need_sub_folder",b"need_sub_folder","pred_dir",b"pred_dir","pred_index_file",b"pred_index_file","pred_index_prefix",b"pred_index_prefix","tvt_index_dir",b"tvt_index_dir"]) -> None: ...
global___ExportConfig = ExportConfig
